<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>longgb246的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-15T13:48:52.833Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>longgb246</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关联分析（1）：基本概念和算法</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_realation_01/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_realation_01/</id>
    <published>2017-02-15T13:48:51.000Z</published>
    <updated>2017-02-15T13:48:52.833Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h3><h5 id="（一）基本概念"><a href="#（一）基本概念" class="headerlink" title="（一）基本概念"></a>（一）基本概念</h5><h6 id="二元概念"><a href="#二元概念" class="headerlink" title="二元概念"></a>二元概念</h6><p>对于购物篮数据，使用二元变量表示。1表示购买，0表示没有购买。</p>
<h6 id="项集和支持度计数"><a href="#项集和支持度计数" class="headerlink" title="项集和支持度计数"></a>项集和支持度计数</h6><p>事务：一行数据。<br>k-项集：一个事务中，出现项。如：3-项集，{啤酒，尿布，牛奶}<br><img src="http://upload-images.jianshu.io/upload_images/3341358-11295870eaafecad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_01.png"></p>
<p>支持度计数：<br>$$\sigma (X)=|\left \{ t_{i}|X\subseteq t_{i},t_{i}\in T \right \}|$$</p>
<p>如，上式中，项集{啤酒，尿布，牛奶}的支持度计数为2，因为只有2个事务同时包含3个项。</p>
<a id="more"></a>
<h6 id="关联规则（association-rule）"><a href="#关联规则（association-rule）" class="headerlink" title="关联规则（association rule）"></a>关联规则（association rule）</h6><p>关于 X、Y 的关联规则，支持度、置信度的定义如下：<br>$$s(X\rightarrow Y)=\frac{\sigma (X\cup Y)}{N}$$<br>$$s(X\rightarrow Y)=\frac{\sigma (X\cup Y)}{\sigma (X)}$$</p>
<p>例如：X{牛奶，尿布}，Y{啤酒}，则并集{牛奶，尿布，啤酒}的支持度计数为2，N为事务总数5，所以支持度=2/5=0.4。X 的支持度=3，所以置信度为2/3=0.67。</p>
<p>支持度很低的规则可能只是偶然出现，低的支持度计数也是无意义的。支持度通常用于删去无意义的规则，<br>置信度越高，表示Y在包含X的事务中出现的可能性较大。Y也可以用于估计在给定X的条件下的条件概率。</p>
<h5 id="（二）关联规则挖掘"><a href="#（二）关联规则挖掘" class="headerlink" title="（二）关联规则挖掘"></a>（二）关联规则挖掘</h5><blockquote>
<p>1、频繁项集产生：发现满足最小支持度阈值的所有项集，这些项是频繁项集。<br>2、规则产生：从频繁项集中提取所有高置信度规则，这些规则是强规则。</p>
</blockquote>
<h5 id="（三）频繁项集的产生"><a href="#（三）频繁项集的产生" class="headerlink" title="（三）频繁项集的产生"></a>（三）频繁项集的产生</h5><p>格结构（lattice structure）：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-f927df9a115283bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_02.png"></p>
<h5 id="原始方法："><a href="#原始方法：" class="headerlink" title="原始方法："></a>原始方法：</h5><p>遍历每个项集，使用项集与事务进行比较，计算每个项集的支持度计数。但是该方法的算法复杂度很高：O(NMw)。<br>改进方法：</p>
<blockquote>
<p>1、减少候选项的数目。先验原理，不计算支持度而删除某些候选项集。<br>2、减少比较次数。更高级的数据结构。</p>
</blockquote>
<h5 id="先验原理"><a href="#先验原理" class="headerlink" title="先验原理"></a>先验原理</h5><blockquote>
<p>先验原理：如果一个项集是频繁的，则它的所有子集也一定是频繁的。<br>相反的，如果一个项集是非频繁的，则它的所有超集也一定是非频繁的。<br>支持度计数的反单调性：一个项集的支持度不会超过它的子集的支持度。</p>
</blockquote>
<h5 id="（四）Apriori-算法的频繁项集产生"><a href="#（四）Apriori-算法的频繁项集产生" class="headerlink" title="（四）Apriori 算法的频繁项集产生"></a>（四）Apriori 算法的频繁项集产生</h5><p>过程图：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-d801677ed00d5e34.png" alt="6_03.png"></p>
<p>算法的流程：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-b2707e258f78bc77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_04.png"></p>
<p>算法讲解：<br>1、先定一个阈值k。<br>2、候选项集为1-项集的，计算支持度，若支持度大于阈值，则保留；若小于则剔除。<br>3、使用(k-1)-项集，产生k-项集。<br>4、重复上面的步骤，直到无候选集（频繁集），结束。</p>
<h5 id="1、Apriori-算法："><a href="#1、Apriori-算法：" class="headerlink" title="1、Apriori 算法："></a>1、Apriori 算法：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">k = 1</div><div class="line">F_(1) = &#123;1-项集 &gt;= min_c&#125;</div><div class="line">while true</div><div class="line">	k = k + 1</div><div class="line">	Ck = apriori_gen(F_(k-1)) \\产生候选集</div><div class="line">	for c in Ck do \\事务</div><div class="line">		for t in T do</div><div class="line">			if isin(t,c)</div><div class="line">			dc = dc + 1 \\支持度计数</div><div class="line">	F_(k) = &#123;提取频繁k-项集^dc &gt;= min_c&#125;</div></pre></td></tr></table></figure>
<h5 id="2、Apriori-gen方法："><a href="#2、Apriori-gen方法：" class="headerlink" title="2、Apriori_gen方法："></a>2、Apriori_gen方法：</h5><h6 id="F-k-1-F-1-方法"><a href="#F-k-1-F-1-方法" class="headerlink" title="F(k-1)*F(1)方法"></a>F(k-1)*F(1)方法</h6><p><img src="http://upload-images.jianshu.io/upload_images/3341358-5b2cddb67e3135c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_05.png"></p>
<h6 id="F-k-1-F-k-1-方法"><a href="#F-k-1-F-k-1-方法" class="headerlink" title="F(k-1)*F(k-1)方法"></a>F(k-1)*F(k-1)方法</h6><p><img src="http://upload-images.jianshu.io/upload_images/3341358-0c5e063896248cfc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_06.png"></p>
<p>原理：使用了字典序，例如：算法不会合并{啤酒，尿布}{尿布，牛奶}，因为如果{啤酒，尿布，牛奶}有效，则它应该由{啤酒，尿布}{啤酒，牛奶}合并。</p>
<h5 id="支持度计数"><a href="#支持度计数" class="headerlink" title="支持度计数"></a>支持度计数</h5><p>支持度计数在apriori_gen函数的候选项保留下来的之中计算。<br>一种枚举方法是：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-aaf218ec8469cee6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_07.png"></p>
<p>每项都以字典序排列，按照上面的枚举。</p>
<h6 id="使用hash树进行支持度计数"><a href="#使用hash树进行支持度计数" class="headerlink" title="使用hash树进行支持度计数"></a>使用hash树进行支持度计数</h6><p>[略]</p>
<h5 id="计算复杂度"><a href="#计算复杂度" class="headerlink" title="计算复杂度"></a>计算复杂度</h5><p>[略]</p>
<h3 id="二、规则产生"><a href="#二、规则产生" class="headerlink" title="二、规则产生"></a>二、规则产生</h3><h4 id="（1）基于置信度的剪枝"><a href="#（1）基于置信度的剪枝" class="headerlink" title="（1）基于置信度的剪枝"></a>（1）基于置信度的剪枝</h4><h5 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h5><blockquote>
<p>如果 X-&gt;Y-X 不满足置信度阈值，则X’-&gt;Y-X’ 的规则一定不满足置信度阈值，其中，X’ 是 X 的子集。</p>
</blockquote>
<h4 id="（2）Apriori-规则产生"><a href="#（2）Apriori-规则产生" class="headerlink" title="（2）Apriori 规则产生"></a>（2）Apriori 规则产生</h4><p>可以利用上面的定理进行剪枝，如左边的bcd-&gt;a不满足置信度阈值，则下面的都减去：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-65f6188c6b9efd01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_08.png"></p>
<h5 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h5><p><img src="http://upload-images.jianshu.io/upload_images/3341358-3bc842139c766c37.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_09.png"></p>
<h3 id="三、频繁项集的紧凑表示"><a href="#三、频繁项集的紧凑表示" class="headerlink" title="三、频繁项集的紧凑表示"></a>三、频繁项集的紧凑表示</h3><h4 id="（1）极大频繁项集"><a href="#（1）极大频繁项集" class="headerlink" title="（1）极大频繁项集"></a>（1）极大频繁项集</h4><blockquote>
<p>极大频繁项集（maximal frequent itemset）：它的直接超集都不是频繁的，频繁项集。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-ed019fe46e334ffd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_10.png"></p>
<p>如上图，{ad}、{ace}、{bcde} 均是极大频繁项集。</p>
<h4 id="（2）闭频繁项集"><a href="#（2）闭频繁项集" class="headerlink" title="（2）闭频繁项集"></a>（2）闭频繁项集</h4><blockquote>
<p>闭项集（closed itemset）：项集X是闭的，如果它的直接超集都不具有和它相同的支持度计数。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-0b68705bb8cc5be1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_11.png"></p>
<p>如上图，{b}{ad}都不是闭项集，而{bc}是闭项集。</p>
<blockquote>
<p>闭频繁项集（closed frequent itemset）一个项集是闭频繁项集，它是闭的，并且它的支持度计数大于或等于最小支持度阈值。</p>
</blockquote>
<p>计算闭频繁项集的支持度算法：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-32bbf860fa045aa0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_12.png"></p>
<p>项集之间的关系：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-e0c5f5413c6a7afa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_13.png"></p>
<h3 id="四、产生频繁项集的其他方法"><a href="#四、产生频繁项集的其他方法" class="headerlink" title="四、产生频繁项集的其他方法"></a>四、产生频繁项集的其他方法</h3><p>[略]</p>
<h3 id="五、FP增长算法"><a href="#五、FP增长算法" class="headerlink" title="五、FP增长算法"></a>五、FP增长算法</h3><p>[略]</p>
<h3 id="六、关联模式的评估"><a href="#六、关联模式的评估" class="headerlink" title="六、关联模式的评估"></a>六、关联模式的评估</h3><h4 id="（1）兴趣度的客观度量"><a href="#（1）兴趣度的客观度量" class="headerlink" title="（1）兴趣度的客观度量"></a>（1）兴趣度的客观度量</h4><h5 id="支持度-置信度框架的局限性"><a href="#支持度-置信度框架的局限性" class="headerlink" title="支持度-置信度框架的局限性"></a>支持度-置信度框架的局限性</h5><p>[略]</p>
<h5 id="兴趣因子"><a href="#兴趣因子" class="headerlink" title="兴趣因子"></a>兴趣因子</h5><p>[略]</p>
<h5 id="相关分析"><a href="#相关分析" class="headerlink" title="相关分析"></a>相关分析</h5><p>[略]</p>
<h5 id="IS度量"><a href="#IS度量" class="headerlink" title="IS度量"></a>IS度量</h5><p>[略]</p>
<h5 id="1、其他客观度量"><a href="#1、其他客观度量" class="headerlink" title="1、其他客观度量"></a>1、其他客观度量</h5><p>度量分为对称和非对称：</p>
<blockquote>
<p>对称：M(A-&gt;B)=M(B-&gt;A)。用于评价项集。<br>非对称：M(A-&gt;B)!=M(B-&gt;A)。用于分析关联规则。</p>
</blockquote>
<p>对称度量：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-8f3593ce3505ae32.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_14.png"></p>
<p>非对称度量：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-7432adb9a6ea16a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_15.png"></p>
<h5 id="2、客观度量的一致性"><a href="#2、客观度量的一致性" class="headerlink" title="2、客观度量的一致性"></a>2、客观度量的一致性</h5><p>上面提到的一系列的度量，不一定都是一致的，需要具体分析。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-a2192e8898d5c392.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="6_16.png"></p>
<h5 id="3、客观度量的性质"><a href="#3、客观度量的性质" class="headerlink" title="3、客观度量的性质"></a>3、客观度量的性质</h5><p>[略]<br>[后略]</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、基本概念&quot;&gt;&lt;a href=&quot;#一、基本概念&quot; class=&quot;headerlink&quot; title=&quot;一、基本概念&quot;&gt;&lt;/a&gt;一、基本概念&lt;/h3&gt;&lt;h5 id=&quot;（一）基本概念&quot;&gt;&lt;a href=&quot;#（一）基本概念&quot; class=&quot;headerlink&quot; title=&quot;（一）基本概念&quot;&gt;&lt;/a&gt;（一）基本概念&lt;/h5&gt;&lt;h6 id=&quot;二元概念&quot;&gt;&lt;a href=&quot;#二元概念&quot; class=&quot;headerlink&quot; title=&quot;二元概念&quot;&gt;&lt;/a&gt;二元概念&lt;/h6&gt;&lt;p&gt;对于购物篮数据，使用二元变量表示。1表示购买，0表示没有购买。&lt;/p&gt;
&lt;h6 id=&quot;项集和支持度计数&quot;&gt;&lt;a href=&quot;#项集和支持度计数&quot; class=&quot;headerlink&quot; title=&quot;项集和支持度计数&quot;&gt;&lt;/a&gt;项集和支持度计数&lt;/h6&gt;&lt;p&gt;事务：一行数据。&lt;br&gt;k-项集：一个事务中，出现项。如：3-项集，{啤酒，尿布，牛奶}&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3341358-11295870eaafecad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;6_01.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;支持度计数：&lt;br&gt;$$\sigma (X)=|\left \{ t_{i}|X\subseteq t_{i},t_{i}\in T \right \}|$$&lt;/p&gt;
&lt;p&gt;如，上式中，项集{啤酒，尿布，牛奶}的支持度计数为2，因为只有2个事务同时包含3个项。&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="关联分析" scheme="http://yoursite.com/tags/%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>分类（6）：不平衡和多分类问题</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_classfy_06/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_classfy_06/</id>
    <published>2017-02-15T13:37:36.000Z</published>
    <updated>2017-02-15T13:43:52.571Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、不平衡问题"><a href="#一、不平衡问题" class="headerlink" title="一、不平衡问题"></a>一、不平衡问题</h4><h5 id="（1）不平衡数据"><a href="#（1）不平衡数据" class="headerlink" title="（1）不平衡数据"></a>（1）不平衡数据</h5><p>例如：一个产品生产的不合格产品数量会远低于合格产品数量。信用卡欺诈的检测中，合法交易远远多于欺诈交易。<br>这时候，准确率的度量会出现一些问题，因为她把每个类都看得同等重要。<br>例如，1%的信用卡交易是欺诈行为，则预测每个交易都是合法的模型有99%的准确率，它也可能检测不到任何欺诈交易。</p>
<h5 id="（2）混淆矩阵"><a href="#（2）混淆矩阵" class="headerlink" title="（2）混淆矩阵"></a>（2）混淆矩阵</h5><p>在不平衡数据中，稀有类比较有意义，对于二元分类，稀有类通常记为正类，而多数类被认为是负类。下面显示了混淆矩阵：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-77c3b86f48870b96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_37.png"></p>
<a id="more"></a>
<blockquote>
<p>真正（true positive，TP）：++<br>假正（false positive，FP）：-+<br>真负（true negative，TN）：–<br>假负（false negative，FN）：+-</p>
</blockquote>
<p>真正率（true positive rate，TPR）或灵敏度（sensitivity）：<br>$$ TPR=\frac{TP}{TP+FN}=\frac{(++)}{(++)+(+-)}$$<br>真负率（true negative rate，TNR）或特指度（specificity）：<br>$$TNR=\frac{TN}{TN+FP}=\frac{(–)}{(–)+(-+)}$$<br>假正率（false positive rate，FPR）：<br>$$FPR=\frac{FP}{TN+FP}=\frac{(+-)}{(–)+(-+)}$$<br>假负率（false negative rate，FNR）：<br>$$ FNR=\frac{FN}{FN+TP}=\frac{(-+)}{(-+)+(++)}$$<br>精度（precision）：<br>$$ p=\frac{TP}{TP+FP}=\frac{(++)}{(++)+(-+)}$$<br>召回率（recall）即为真正率：<br>$$r=\frac{(TP)}{(TP)+(FN)}=\frac{(++)}{(++)+(+-)}$$<br>精度和召回率是很重要的度量量，称为 F1 统计量：<br>$$ F_{1}=\frac{2rp}{r+p}=\frac{2\times TP}{2\times TP+FP+FN}=\frac{2}{\frac{1}{r}+\frac{1}{p}}$$<br>F1 是召回率和精度的调和平均数，F1 趋近于它们之间的较小值，因此，一个高的 F1 确保精度和召回率都高。<br>Fb 的公式：<br>$$ F_{b}=\frac{(b^{2}+1)rp}{r+b^{2}p}=\frac{(b^{2}+1)}{\frac{1}{r}+\frac{b^{2}}{p}}$$<br>低的 b 使得 Fb 更加接近精度，高的 b 使得 Fb 更加接近召回率。</p>
<h5 id="（3）接受者操作曲线（ROC）"><a href="#（3）接受者操作曲线（ROC）" class="headerlink" title="（3）接受者操作曲线（ROC）"></a>（3）接受者操作曲线（ROC）</h5><blockquote>
<p>是真正率和假正率取折中的一种图形化方法。真正率为 y 轴，假正率为 x 轴。</p>
</blockquote>
<p>ROC的几个关键点：</p>
<blockquote>
<p>（TPR=0,FPR=0）:把所有的都预测为负<br>（TPR=1,FPR=1）:把所有的都预测为正<br>（TPR=1,FPR=0）:理想模型。只要是正的，都预测为正。</p>
</blockquote>
<p>一个好的分类器，尽量靠近左上角，随机猜想为对角线。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-291214111746c1d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_38.png"></p>
<p>产生ROC曲线方法：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-785ee8715b8e3937.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_39.png"></p>
<h5 id="（4）代价敏感学习"><a href="#（4）代价敏感学习" class="headerlink" title="（4）代价敏感学习"></a>（4）代价敏感学习</h5><p>模型 M 的代价：<br>$$ C_{t}(M)=TP\times C(+,+)+FP\times C(-,+)+FN\times C(+,1)+FN\times C(-,-)$$</p>
<p>如下是一个代价矩阵：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-297e0b3d8f363ce1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_40.png"></p>
<p>它可以把决策边界扩展：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-e36c99b877fc8be2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_41.png"></p>
<p>对于代价矩阵，若 C(+,+)=C(-,-)=0 的情况，分类正确不需要代价，则：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-359569c4900501fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_42.png"></p>
<p>求解可以得到决策边界。</p>
<h6 id="基于抽样方法"><a href="#基于抽样方法" class="headerlink" title="基于抽样方法"></a>基于抽样方法</h6><p>对于样本进行处理，假设有100个正样本和1000个负样本。<br>不充分抽样（udersampling）：取和正样本一样数量的负样本，取100个负样本，形成训练集。<br>过分抽样（oversampling）：将正样本复制，或者重复抽样，使得正样本的数量和负样本一样1000个。</p>
<h4 id="二、多类问题"><a href="#二、多类问题" class="headerlink" title="二、多类问题"></a>二、多类问题</h4><blockquote>
<p>1、one-vs-rest 方法。将多类问题分解为 K 个二类问题，将属于$y_{i}$的归为正类，而其他类被分为负类，依次进行。<br>2、one-vs-one 方法。它构建$\frac{K(K-1)}{2}$ 个二分类器，每一个分类器用来区分一对类 $(y_{i},y_{j})$ ，当为类 $(y_{i},y_{j})$ 建立分类器的时候，将不属于 $(y_{i},y_{j})$ 的样本忽略掉。</p>
</blockquote>
<p>例子：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-8712856c5236b70b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_43.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-bb9f20a6e31754da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_44.png"></p>
<p>使用上述两种方法建模后，可能出现分类平局。另一种方法，将输出转变为概率估计，将实例给予高概率的类。</p>
<h5 id="纠错输出编码"><a href="#纠错输出编码" class="headerlink" title="纠错输出编码"></a>纠错输出编码</h5><p>纠错输出编码（error-correcting output coding，ECOC）：一种处理多分类更加鲁棒的方法，给予每个类一个代码字，对于每个可能预测错误的，选取距离代码字最近的那一类。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、不平衡问题&quot;&gt;&lt;a href=&quot;#一、不平衡问题&quot; class=&quot;headerlink&quot; title=&quot;一、不平衡问题&quot;&gt;&lt;/a&gt;一、不平衡问题&lt;/h4&gt;&lt;h5 id=&quot;（1）不平衡数据&quot;&gt;&lt;a href=&quot;#（1）不平衡数据&quot; class=&quot;headerlink&quot; title=&quot;（1）不平衡数据&quot;&gt;&lt;/a&gt;（1）不平衡数据&lt;/h5&gt;&lt;p&gt;例如：一个产品生产的不合格产品数量会远低于合格产品数量。信用卡欺诈的检测中，合法交易远远多于欺诈交易。&lt;br&gt;这时候，准确率的度量会出现一些问题，因为她把每个类都看得同等重要。&lt;br&gt;例如，1%的信用卡交易是欺诈行为，则预测每个交易都是合法的模型有99%的准确率，它也可能检测不到任何欺诈交易。&lt;/p&gt;
&lt;h5 id=&quot;（2）混淆矩阵&quot;&gt;&lt;a href=&quot;#（2）混淆矩阵&quot; class=&quot;headerlink&quot; title=&quot;（2）混淆矩阵&quot;&gt;&lt;/a&gt;（2）混淆矩阵&lt;/h5&gt;&lt;p&gt;在不平衡数据中，稀有类比较有意义，对于二元分类，稀有类通常记为正类，而多数类被认为是负类。下面显示了混淆矩阵：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3341358-77c3b86f48870b96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;5_37.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分类算法" scheme="http://yoursite.com/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分类（5）：组合分类器-随机森林</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_classfy_05/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_classfy_05/</id>
    <published>2017-02-15T13:32:47.000Z</published>
    <updated>2017-02-15T13:43:47.541Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、组合方法"><a href="#一、组合方法" class="headerlink" title="一、组合方法"></a>一、组合方法</h4><h5 id="（1）组合分类器原理："><a href="#（1）组合分类器原理：" class="headerlink" title="（1）组合分类器原理："></a>（1）组合分类器原理：</h5><p>考虑25个二元分类器，每一个分类误差a=0.35。组合分类器通过多数投票，如果基分类器是独立的，则仅当超过一半的基分类器都预测错误时，组合才会错误，则：<br>$$ e_{ensemble}=\sum_{i=1}^{25}C_{25}^{i}a^{i}(1-a)^{25-i}=0.06$$</p>
<p>可以看出，其远低于0.35。</p>
<h5 id="（2）组合分类器与基分类器比较："><a href="#（2）组合分类器与基分类器比较：" class="headerlink" title="（2）组合分类器与基分类器比较："></a>（2）组合分类器与基分类器比较：</h5><p><img src="http://upload-images.jianshu.io/upload_images/3341358-54f2009701fddbac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_26.png"></p>
<a id="more"></a>
<p>上图，虚线表示所有基分类器都一样，实线表示所有基分类器都独立。可以看出，当基分类器的错误率大于0.5（仅这个例子吗？）时候，组合分类器的性能不比基分类器的性能好。<br>组合分类器的性能优于基分类器的条件：</p>
<blockquote>
<p>1、基分类器应该是<strong>独立</strong>的。<br>2、基分类器应当好于随机猜想。</p>
</blockquote>
<h5 id="（3）袋装（bagging）-自助法（bootstrap-aggregating）"><a href="#（3）袋装（bagging）-自助法（bootstrap-aggregating）" class="headerlink" title="（3）袋装（bagging）-自助法（bootstrap aggregating）"></a>（3）袋装（bagging）-自助法（bootstrap aggregating）</h5><h6 id="袋装-自助法（bootstrap）："><a href="#袋装-自助法（bootstrap）：" class="headerlink" title="袋装-自助法（bootstrap）："></a>袋装-自助法（bootstrap）：</h6><p>训练集是对于原数据集的有放回抽样，如果原始数据集N，可以证明，大小为N的自助样本大约包含原数据63.2%的记录。当N充分大的时候，1-（1-1/N）^(N) 概率逼近 1-e^(-1)=0.632。抽样 b 次，产生 b 个bootstrap样本，则，总准确率为（accs为包含所有样本计算的准确率）：<br>$$  acc_{boot}=\frac{1}{b}\sum_{i=1}^{b}(0.632\times\varepsilon _{i}+0.368\times acc_{s})$$</p>
<h6 id="袋装算法："><a href="#袋装算法：" class="headerlink" title="袋装算法："></a>袋装算法：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">设 k 为自助样本的数目</div><div class="line"><span class="keyword">for</span> i = <span class="number">1</span> to k do</div><div class="line">  生成一个大小为 N 的自助样本 Dt</div><div class="line">  在自助样本 Dt 上训练一个基分类器 Ci</div><div class="line">C*=argmax（Ci...）</div></pre></td></tr></table></figure>
<h6 id="袋装举例理解："><a href="#袋装举例理解：" class="headerlink" title="袋装举例理解："></a>袋装举例理解：</h6><p>下面的这个数据集，使用决策树，熵值来分裂，可以得到分裂点为：x&lt;=0.35  或 x&lt;=0.75，但是无论是哪个分类点，准确率都最多为70%。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-ac32116bd2c12d57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_27.png"></p>
<p>使用袋装抽样：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-567a1833f3ab1c6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_28.png"></p>
<p>使用简单的求和，取符号，可以发现，分类正确率为100%：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-d07e2f579ee5f696.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_29.png"></p>
<h6 id="袋装评价："><a href="#袋装评价：" class="headerlink" title="袋装评价："></a>袋装评价：</h6><blockquote>
<p>1、通过降低基分类器的<strong>方差</strong>改善了泛化误差<br>2、袋装的性能依赖于基分类器的稳定性。如果基分类器是不稳定的，袋装有助于降低训练数据的随机波动导致的误差；如果基分类器是稳定的，则组合分类器的误差主要由基分类器的偏倚引起，则这种情况下，袋装可能会降低分类器的性能。<br>3、袋装中的数据是均概率被选中，所以对特定数据不敏感，对于噪音，不太受过拟合影响。</p>
</blockquote>
<h5 id="（4）提升（Boosting）"><a href="#（4）提升（Boosting）" class="headerlink" title="（4）提升（Boosting）"></a>（4）提升（Boosting）</h5><blockquote>
<p>提升是一个迭代过程，自适应的改变样本的分布，使得基分类器聚焦在那些很难分类的样本上，提升每次给一个训练样本一个权值，在每一轮结束的时候自动地调整权值。</p>
</blockquote>
<p>现在又很多提升算法，算法的差别在于：</p>
<blockquote>
<p>（1）每轮提升结束时如何更新训练样本权值<br>（2）如何组合每个分类器的预测</p>
</blockquote>
<h6 id="AdaBoost"><a href="#AdaBoost" class="headerlink" title="AdaBoost"></a>AdaBoost</h6><p>在该算法中，基分类器 Ci 的重要性依赖于它的错误率，错误率的定义：<br>$$ error_{i}=\frac{1}{N}\left[\sum_{j=1}^{N}w_{j}I(C_{i}(x_{j}\neq y_{j}))\right]$$<br>对于I，为指示变量，错误个数的加权取平均，基分类器的重要度 \alpha 为：<br>$$ \alpha_{i}=\frac{1}{2}ln\left(\frac{1-error_{i}}{error_{i}}\right)$$<br>作出重要度 \alpha 关于 error 的图：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-f9aa54c012a54386.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_30.png"></p>
<p>发现错误率接近 0 时候，重要度很大，接近 1 时候，重要度负向很大。<br>Adaboost 的权值更新有以下给出，第 j 次迭代：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-248390a2b40241cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_31.png"></p>
<p>Zj 是一个正规因子，用于确保：<br>$$\sum_{i}w_{i}^{j+1}=1$$</p>
<h6 id="AdaBoost算法："><a href="#AdaBoost算法：" class="headerlink" title="AdaBoost算法："></a>AdaBoost算法：</h6><p><img src="http://upload-images.jianshu.io/upload_images/3341358-eac202ad78997335.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_32.png"></p>
<h6 id="AdaBoost例子："><a href="#AdaBoost例子：" class="headerlink" title="AdaBoost例子："></a>AdaBoost例子：</h6><p><img src="http://upload-images.jianshu.io/upload_images/3341358-1d3ea4e0010c0305.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_33.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-d5ce991ea50f4bd3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_34.png"></p>
<blockquote>
<p>1、该组合分类器的训练误差呈指数递减，从而算法很快就会收敛。<br>2、但是它倾向于那些被误分类的样本，所以提升技术很容易受到过拟合的影响。</p>
</blockquote>
<h4 id="二、随机森林（Random-Forest）"><a href="#二、随机森林（Random-Forest）" class="headerlink" title="二、随机森林（Random Forest）"></a>二、随机森林（Random Forest）</h4><h5 id="随机森林的过程图："><a href="#随机森林的过程图：" class="headerlink" title="随机森林的过程图："></a>随机森林的过程图：</h5><p><img src="http://upload-images.jianshu.io/upload_images/3341358-c5fc2f3eb53f229b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_35.png"></p>
<p>已经从理论上证明了，当树的数目足够大的时候，随机森林的泛化误差的上界收敛于下面表达式：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-7f6c9671e2e85e76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_36.png"></p>
<h5 id="随机森林性质"><a href="#随机森林性质" class="headerlink" title="随机森林性质"></a>随机森林性质</h5><p>每棵决策树都使用一个从固定概率分布产生的随机向量。可以使用多种方法将随机向量合并到树中。</p>
<h6 id="不同的随机森立方法："><a href="#不同的随机森立方法：" class="headerlink" title="不同的随机森立方法："></a>不同的随机森立方法：</h6><blockquote>
<p>1、Forest-RI。随机选择 F 个输入特征来对决策树的结点进行分裂，树之后完全增长不进行任何修剪，这有助于减少树的偏倚。之后用多数投票表决来组合预测。为了增加随机性，可以使用自助样本。<br>2、Forest-RC。d 的数目太小的情况，需要增大特征空间，创建输入特征的线性组合。输入特征用区间[-1,1]的均匀分布产生的系数进行线性组合。<br>3、对于每个结点，从 F 个最佳划分中随机选择一个，该方法也是比上面两个更花费时间。<br>4、随机森林的分裂准确率与Adaboost相媲美，但它对噪声更加鲁棒，运行速度也比Adaboost快得多。</p>
</blockquote>
<h6 id="随机森林的一些参数选择"><a href="#随机森林的一些参数选择" class="headerlink" title="随机森林的一些参数选择"></a>随机森林的一些参数选择</h6><p>通常选取特征数目为：<br>$$ F=log_{2}^{d}+1$$<br>d 为输入特征数。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、组合方法&quot;&gt;&lt;a href=&quot;#一、组合方法&quot; class=&quot;headerlink&quot; title=&quot;一、组合方法&quot;&gt;&lt;/a&gt;一、组合方法&lt;/h4&gt;&lt;h5 id=&quot;（1）组合分类器原理：&quot;&gt;&lt;a href=&quot;#（1）组合分类器原理：&quot; class=&quot;headerlink&quot; title=&quot;（1）组合分类器原理：&quot;&gt;&lt;/a&gt;（1）组合分类器原理：&lt;/h5&gt;&lt;p&gt;考虑25个二元分类器，每一个分类误差a=0.35。组合分类器通过多数投票，如果基分类器是独立的，则仅当超过一半的基分类器都预测错误时，组合才会错误，则：&lt;br&gt;$$ e_{ensemble}=\sum_{i=1}^{25}C_{25}^{i}a^{i}(1-a)^{25-i}=0.06$$&lt;/p&gt;
&lt;p&gt;可以看出，其远低于0.35。&lt;/p&gt;
&lt;h5 id=&quot;（2）组合分类器与基分类器比较：&quot;&gt;&lt;a href=&quot;#（2）组合分类器与基分类器比较：&quot; class=&quot;headerlink&quot; title=&quot;（2）组合分类器与基分类器比较：&quot;&gt;&lt;/a&gt;（2）组合分类器与基分类器比较：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3341358-54f2009701fddbac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;5_26.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分类算法" scheme="http://yoursite.com/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分类（4）：支持向量机（SVM）</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_classfy_04/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_classfy_04/</id>
    <published>2017-02-15T13:26:40.000Z</published>
    <updated>2017-02-15T13:43:41.437Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h4><p>SVM 寻找一个最大边缘超平面（maximal margin hyperplane），使得将数据分开，并且有最大的margin，泛化能力。</p>
<h5 id="（1）结构风险最小化（structual-risk-minimization，SRM）"><a href="#（1）结构风险最小化（structual-risk-minimization，SRM）" class="headerlink" title="（1）结构风险最小化（structual risk minimization，SRM）"></a>（1）结构风险最小化（structual risk minimization，SRM）</h5><p>线性分类器的边缘与泛化误差之间的关系，分类器的泛化误差在最坏的情况下：<br>$$R\leqslant R_{e}+\varphi \left(\frac{h}{N},\frac{log(\eta )}{N}\right)$$<br>$\varphi$是h的单调增函数，$1-\eta$表示概率。<br><a id="more"></a></p>
<h5 id="（2）SVM线性分类器"><a href="#（2）SVM线性分类器" class="headerlink" title="（2）SVM线性分类器"></a>（2）SVM线性分类器</h5><p>模型：<br>$$ w\cdot x+b=0$$<br>线性分类图：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-aaf039d936a7738e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_10.png"><br>于是我们有：<br>$$ w\cdot x_{s}+b=k,w\cdot x_{c}+b=k$$<br>其中，k&gt;0，左边表示在决策边界的上面。k’&lt;0，右边表示在决策边界下面。<br>如果我们标记一个类为+1，另一个类为-1，则有：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-3b3c4a5c74c6e299.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_11.png"></p>
<p>距离：<br>$$ w(x_{1}-x_{2})=2\rightarrow d=\frac{2}{\left | w \right |},\left | w \right |=\sqrt{w_{1}^{2}+w_{2}^{2}+…+w_{k}^{2}}$$</p>
<h5 id="（3）线性SVM：可分情况"><a href="#（3）线性SVM：可分情况" class="headerlink" title="（3）线性SVM：可分情况"></a>（3）线性SVM：可分情况</h5><h6 id="决策边界的参数"><a href="#决策边界的参数" class="headerlink" title="决策边界的参数"></a>决策边界的参数</h6><p>上面的为+1，下面的为-1，则可以概括为：<br>$$ y_{i}(w\cdot x_{i}+b)\geqslant 1,i=1,2,…,N$$<br>最大化边缘，等价于最小化下面目标函数：<br>$$f(w)=\frac{\left|w\right|^{2}}{2}$$<br>目标函数是二次的，约束在w、b上是线性的，这是一个凸优化问题，通过拉格朗日乘子求解。<br>$$L_{p}=\frac{1}{2}\left|w\right|^{2}-\sum_{i=1}^{N}\lambda _{i}(y_{i}\left(w\cdot x_{i}+b)-1\right)$$</p>
<h6 id="Karuch-Kuhn-Tucher（KKT）："><a href="#Karuch-Kuhn-Tucher（KKT）：" class="headerlink" title="Karuch-Kuhn-Tucher（KKT）："></a>Karuch-Kuhn-Tucher（KKT）：</h6><p>把不等式约束转换为等式约束，限制拉格朗日乘子非负。<br>$$ \lambda_{i}\geqslant 1$$<br>$$ \lambda_{i}[y_{i}(w\cdot x_{i}+b)-1]=0$$<br>下面的等式，使得许多拉格朗日乘子都变为零。该约束表明，除非$y_{i}(w*x_{i}+b)=1$，否则拉格朗日乘子必须为零。<br>那些$\lambda&gt;0$的训练实例在两个超平面上，称为支持向量，$lambda=0$的肯定不在超平面上。决策边界w、b仅仅依赖这些支持向量。<br>此外，也可以使用对偶拉格朗日，使用二次规划求解。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-71585de3f64cfe25.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_12.png"></p>
<h6 id="SVM的例子："><a href="#SVM的例子：" class="headerlink" title="SVM的例子："></a>SVM的例子：</h6><p><img src="http://upload-images.jianshu.io/upload_images/3341358-271cf98ca192603c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_13.png"></p>
<p>&lt;简书&gt;：我的心在滴血啊，写了一下午，你居然没有保存，网站页面设计的“保存中…”“已保存”就是个普通js吗？没有事务的吗？就修改文档的时候触发一下，然后也不判断是否联网，是否保存等。逗！！再不用简书。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、基本概念&quot;&gt;&lt;a href=&quot;#一、基本概念&quot; class=&quot;headerlink&quot; title=&quot;一、基本概念&quot;&gt;&lt;/a&gt;一、基本概念&lt;/h4&gt;&lt;p&gt;SVM 寻找一个最大边缘超平面（maximal margin hyperplane），使得将数据分开，并且有最大的margin，泛化能力。&lt;/p&gt;
&lt;h5 id=&quot;（1）结构风险最小化（structual-risk-minimization，SRM）&quot;&gt;&lt;a href=&quot;#（1）结构风险最小化（structual-risk-minimization，SRM）&quot; class=&quot;headerlink&quot; title=&quot;（1）结构风险最小化（structual risk minimization，SRM）&quot;&gt;&lt;/a&gt;（1）结构风险最小化（structual risk minimization，SRM）&lt;/h5&gt;&lt;p&gt;线性分类器的边缘与泛化误差之间的关系，分类器的泛化误差在最坏的情况下：&lt;br&gt;$$R\leqslant R_{e}+\varphi \left(\frac{h}{N},\frac{log(\eta )}{N}\right)$$&lt;br&gt;$\varphi$是h的单调增函数，$1-\eta$表示概率。&lt;br&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分类算法" scheme="http://yoursite.com/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分类（3）：人工神经网络（ANN）</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_classfy_03/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_classfy_03/</id>
    <published>2017-02-15T13:23:21.000Z</published>
    <updated>2017-02-15T13:43:34.699Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、感知器"><a href="#一、感知器" class="headerlink" title="一、感知器"></a>一、感知器</h4><p>下图为一个感知器，单个神经元。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-c8d5e57205a85f05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_06.png"><br>该感知器的算法：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-3578cedeed16cbe4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_07.png"><br><a id="more"></a></p>
<h4 id="二、多层人工神经网络"><a href="#二、多层人工神经网络" class="headerlink" title="二、多层人工神经网络"></a>二、多层人工神经网络</h4><h5 id="（1）基本概念"><a href="#（1）基本概念" class="headerlink" title="（1）基本概念"></a>（1）基本概念</h5><p>神经网络，这里先以前馈神经网络为介绍，每层为全连接，则对于2个神经元，参数为：</p>
<blockquote>
<p>（1）w权值，（2）b偏置，（3）delta 激活函数。</p>
</blockquote>
<p>多层神经网络的结构图，以下为前馈神经网络的结构（2层）：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-cd4ad3a0be5116c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_08.png"><br>常用的 delta 激活函数：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-234d1970a2ebc9ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_09.png"><br>基于梯度下降的权值更新：<br>$$ w_{j}\leftarrow w_{j}-\lambda \frac{\partial E(w)}{\partial w_{j}}$$<br>$\lambda$为学习率。</p>
<h5 id="（2）反向传播（back-propagation）"><a href="#（2）反向传播（back-propagation）" class="headerlink" title="（2）反向传播（back-propagation）"></a>（2）反向传播（back-propagation）</h5><p>对于数据集，可以使用mini-batch，每次选取一部分，直到将数据使用完毕。每次每个数据包括两个阶段， 向前阶段和向后阶段。</p>
<blockquote>
<p>向前阶段：通过初始权值、初始偏置和激活函数，每次更新隐藏层和输出层的值；<br>向后阶段：通过权值更新法则，更新权值和偏置。<br>直到数据使用完毕，或者，权值更新的差值小于某个阈值。</p>
</blockquote>
<h5 id="（3）神经网络特点"><a href="#（3）神经网络特点" class="headerlink" title="（3）神经网络特点"></a>（3）神经网络特点</h5><blockquote>
<p>1、至少含有一个隐藏层的是一种普适近似（universal approximator），即可以用来近似任何目标函数。<br>2、可以处理冗余特征，冗余特征的权值会非常小。<br>3、梯度下降法会收敛到局部极小值，避免方法可以在权值更新公式上加上一个动量项（momentum term）</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、感知器&quot;&gt;&lt;a href=&quot;#一、感知器&quot; class=&quot;headerlink&quot; title=&quot;一、感知器&quot;&gt;&lt;/a&gt;一、感知器&lt;/h4&gt;&lt;p&gt;下图为一个感知器，单个神经元。&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3341358-c8d5e57205a85f05.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;5_06.png&quot;&gt;&lt;br&gt;该感知器的算法：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3341358-3578cedeed16cbe4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;5_07.png&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分类算法" scheme="http://yoursite.com/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分类（2）：k-最近邻、贝叶斯分类器</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_classfy_02/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_classfy_02/</id>
    <published>2017-02-15T13:14:31.000Z</published>
    <updated>2017-02-15T13:43:29.145Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、k-最近邻"><a href="#一、k-最近邻" class="headerlink" title="一、k-最近邻"></a>一、k-最近邻</h4><h5 id="1、算法"><a href="#1、算法" class="headerlink" title="1、算法"></a>1、算法</h5><p>积极学习方法（eager learner）：通过训练样本建立模型。<br>消极学习方法（lazy learner）：实例的学习，k-最近邻就属于这种。</p>
<h6 id="k-最近邻算法："><a href="#k-最近邻算法：" class="headerlink" title="k-最近邻算法："></a>k-最近邻算法：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">令k是最近邻数目，D是训练样例集合</div><div class="line"><span class="keyword">for</span> z <span class="keyword">in</span> 样例集合:</div><div class="line">  计算 z 和每个样例 (x,y) 的距离 d</div><div class="line">  选择离 z 前 k 个近距离的点，为集合 Dt</div><div class="line">  z的标记 y 为 Dt 中类较多的</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>k-最近邻采用多数表决的方法，该算法对 k 敏感：<br>$$y’=argmax_{v}\sum_{(x_{i},y_{i})\in D_{t}} I(v=y_{i})$$<br>所以，需要降低 k 的影响，一种途径就是对距离的不同加权，如下，因为距离远的影响要弱一些，以距离平方的倒数为权值。<br>$$y’=argmax_{v}\sum_{(x_{i},y_{i})\in D_{t}}w_{i}\times I(v=y_{i}),w_{i}=\frac{1}{d(x’,x_{i})^{2}}$$</p>
<h5 id="2、最近邻分类器特征："><a href="#2、最近邻分类器特征：" class="headerlink" title="2、最近邻分类器特征："></a>2、最近邻分类器特征：</h5><blockquote>
<p>（1）实例的学习，不需要建模，但分类测试的开销很大。<br>（2）当k比较小的时候，对噪声非常敏感。<br>（3）可以生成任意决策边界。</p>
</blockquote>
<h4 id="二、贝叶斯分类器"><a href="#二、贝叶斯分类器" class="headerlink" title="二、贝叶斯分类器"></a>二、贝叶斯分类器</h4><h5 id="1、贝叶斯公式"><a href="#1、贝叶斯公式" class="headerlink" title="1、贝叶斯公式"></a>1、贝叶斯公式</h5><p>$$P(Y_{j}|X)=\frac{P(X|Y_{j})P(Y_{j})}{P(X)}=\frac{P(X|Y_{j})P(Y_{j})}{\sum_{i=1}^{n}P(X|Y_{i})P(Y_{i})}$$</p>
<h5 id="2、朴素贝叶斯"><a href="#2、朴素贝叶斯" class="headerlink" title="2、朴素贝叶斯"></a>2、朴素贝叶斯</h5><h6 id="（1）条件独立性："><a href="#（1）条件独立性：" class="headerlink" title="（1）条件独立性："></a>（1）条件独立性：</h6><p>给定 Z，X 条件独立于 Y:<br>$$P(X|Y,Z)=P(X|Z)$$<br>则有：<br>$$P(X,Y|Z)=\frac{P(Z,Y,X)}{P(Z)}=\frac{P(Z,Y,X)}{P(Y,Z)}\frac{P(Y,Z)}{P(Z)}=P(X|Y,Z)P(Y|Z)=P(X|Z)P(Y|Z)$$</p>
<h6 id="（2）朴素贝叶斯分类器："><a href="#（2）朴素贝叶斯分类器：" class="headerlink" title="（2）朴素贝叶斯分类器："></a>（2）朴素贝叶斯分类器：</h6><p>$$P(Y|X)=\frac{P(X|Y)P(Y)}{P(X)}=\frac{P(X_{1},…,X_{d})P(Y)}{P(X)}=\frac{P(Y)\prod_{i=1}^{d}P(X_{i}|Y)}{P(X)}$$</p>
<h6 id="（3）连续属性的条件概率："><a href="#（3）连续属性的条件概率：" class="headerlink" title="（3）连续属性的条件概率："></a>（3）连续属性的条件概率：</h6><p><1>把每个连续属性离散化，用相应的区间去替代原来的属性，但若某一个区间的样本数目过少，不容易做出可靠的估计。</1></p>
<p><2>可以假设连续变量服从正态分布，Xi的概率等于：<br>$$P(X_{i}=x_{i}|Y=y_{j})=\frac{1}{\sqrt{2\pi}\sigma_{ij}}e^{-\frac{(x_{i}-\mu_{ij})^{2}}{2\sigma_{ij}}}$$<br>其中 $\mu$ 用样本均值估计， $\sigma$ 用样本方差估计。</2></p>
<h6 id="（4）朴素贝叶斯举例："><a href="#（4）朴素贝叶斯举例：" class="headerlink" title="（4）朴素贝叶斯举例："></a>（4）朴素贝叶斯举例：</h6><p>拖欠贷款为 Y 变量。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-cd962d2b90b84337.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_01.png"><br>测试记录X=（有房=否，婚姻状况=已婚，年收入=120K），求后验概率P（No|X）、P（Yes|X）。<br>总的 Y 可以知道，P（Yes）=0.3，P（No）=0.7。则：</p>
<blockquote>
<p>P（X | No）=P（有房=否 | No）x P（婚姻状况=已婚 | No）x P（年收入=120K | No）=0.0024<br>P（X | Yes）= P（有房=否 | Yes）x P（婚姻状况=已婚 | Yes）x P（年收入=120K | Yes）=0</p>
</blockquote>
<p>因为P（No|X）&gt;P（Yes|X），所以该测试分类为No，不拖欠贷款。<br>上例中，P（婚姻状况=已婚 | Yes）=0，可能会出现极端现象，为了防止出现0，朴素贝叶斯没法正确分类，可以使用 m 估计（m-estimate）：<br>$$ P(x_{i}|y_{j})=\frac{n_{c}+mp}{n+m}$$<br>$n$ 为 $y_{i}$ 的实例总数，$n_{c}$ 为 $y_{i}$ 中 $x_{i}$ 的实例数目，p 是用户指定，m 为等价样本大小的参数。上面的计算：P（婚姻状况=已婚 | Yes）=(0+3 x 1/3)/(3+3)=1/6，而不是0。</p>
<h6 id="（4）朴素贝叶斯特征："><a href="#（4）朴素贝叶斯特征：" class="headerlink" title="（4）朴素贝叶斯特征："></a>（4）朴素贝叶斯特征：</h6><blockquote>
<p>对于噪声点，朴素贝叶斯是健壮的。也可以处理属性值遗漏问题。<br>无关属性，朴素贝叶斯是健壮的。对于相关属性，可能会降低分类性能。</p>
</blockquote>
<h5 id="3、贝叶斯置信网络（Bayesian-belief-networks，BBN）"><a href="#3、贝叶斯置信网络（Bayesian-belief-networks，BBN）" class="headerlink" title="3、贝叶斯置信网络（Bayesian belief networks，BBN）"></a>3、贝叶斯置信网络（Bayesian belief networks，BBN）</h5><h6 id="（1）模型表示："><a href="#（1）模型表示：" class="headerlink" title="（1）模型表示："></a>（1）模型表示：</h6><p>两个主要成分：</p>
<blockquote>
<p>一个有向无环图（DAG），表示变量之间的关系；<br>一个概率表，把各个结点和它的直接父节点关联起来。</p>
</blockquote>
<p>性质1：条件独立<br>贝叶斯网络中的一个结点，如果它的父母结点已知，则它条件独立于它的所有非后代结点。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-9e01f1fad2d71412.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_02.png"><br>如图（b），给定C，A 条件独立于 B 和 D。<br>除了网络拓扑结构要求的条件独立外，每个结点还关联一个概率表。</p>
<blockquote>
<p>（1）如果结点 X 没有父母结点，则表中只包含先验概率P(X);<br>（2）如果结点 X 只有一个父母结点 Y，则表中包含先验概率P(X | Y);<br>（3）如果结点 X 有多个父母结点{Y1，Y2…，Yk}，则表中只包含先验概率P(X|Y1，Y2…，Yk);</p>
</blockquote>
<p>下图是一个贝叶斯置信网络。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-f75caad2586c4f19.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_03.png"></p>
<h6 id="（2）建立模型："><a href="#（2）建立模型：" class="headerlink" title="（2）建立模型："></a>（2）建立模型：</h6><p>贝叶斯网络拓扑结构的生成算法：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">设T=（X1，X2，...Xd）表示变量的全序</div><div class="line"><span class="keyword">for</span> j=<span class="number">1</span> to d do</div><div class="line">  令 XTj 表示 T 中第 j 个次序最高的变量</div><div class="line">  令A（XTj）=&#123;XT1，XT2，...XTj<span class="number">-1</span>&#125; 表示排在 XTj 前面的变量的集合</div><div class="line">  从A（XTj）中去掉对 Xj 没有影响的变量（使用先验知识）</div><div class="line">  在 XTj 和 A（XTj） 中的剩余变量之间画弧</div></pre></td></tr></table></figure></p>
<p>考虑到图5_03，经过循环后，得到的如下概率：</p>
<blockquote>
<p>P（D | E）化简为 P（D）<br>P（HD | E,D）不能化简<br>P（Hb | E,D,HD）化简为 P（Hb | D）<br>P（CP | E,D,HD,Hb）化简为 P（CP | HD,Hb）<br>P（BP | E,D,HD,Hb,CP）化简为 P（BP | HD）</p>
</blockquote>
<p>上面的算法，保证了不会生成环。<br>不同的变量排序会产生不同的拓扑结构，理论上需要 d！种排序才能找到最优的，开销很大。代替方法是把变量分成原因变量和结果变量，从原因到结果画弧。</p>
<h6 id="（3）使用BNN进行推理："><a href="#（3）使用BNN进行推理：" class="headerlink" title="（3）使用BNN进行推理："></a>（3）使用BNN进行推理：</h6><p>根据上面的贝叶斯置信网络图，有下面情况：<br><img src="http://upload-images.jianshu.io/upload_images/3341358-bc19e263319b348d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_04.png"><br><img src="http://upload-images.jianshu.io/upload_images/3341358-b9d40731e3d646db.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="5_05.png"></p>
<h6 id="（4）BNN的特点："><a href="#（4）BNN的特点：" class="headerlink" title="（4）BNN的特点："></a>（4）BNN的特点：</h6><blockquote>
<p>构造网络比较费时，但网络结构一旦确定下来，添加新变量就变得容易。<br>很适合处理不完整数据，对有属性遗漏的可以通过概率或求积分来加以处理。<br>数据和先验知识结合起来，该方法对于模型的过拟合问题是非常鲁棒的。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、k-最近邻&quot;&gt;&lt;a href=&quot;#一、k-最近邻&quot; class=&quot;headerlink&quot; title=&quot;一、k-最近邻&quot;&gt;&lt;/a&gt;一、k-最近邻&lt;/h4&gt;&lt;h5 id=&quot;1、算法&quot;&gt;&lt;a href=&quot;#1、算法&quot; class=&quot;headerlink&quot; title=&quot;1、算法&quot;&gt;&lt;/a&gt;1、算法&lt;/h5&gt;&lt;p&gt;积极学习方法（eager learner）：通过训练样本建立模型。&lt;br&gt;消极学习方法（lazy learner）：实例的学习，k-最近邻就属于这种。&lt;/p&gt;
&lt;h6 id=&quot;k-最近邻算法：&quot;&gt;&lt;a href=&quot;#k-最近邻算法：&quot; class=&quot;headerlink&quot; title=&quot;k-最近邻算法：&quot;&gt;&lt;/a&gt;k-最近邻算法：&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;令k是最近邻数目，D是训练样例集合&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; z &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; 样例集合:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  计算 z 和每个样例 (x,y) 的距离 d&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  选择离 z 前 k 个近距离的点，为集合 Dt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  z的标记 y 为 Dt 中类较多的&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分类算法" scheme="http://yoursite.com/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>分类（1）：决策树与模型评估</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_classfy_01/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_classfy_01/</id>
    <published>2017-02-15T12:57:50.000Z</published>
    <updated>2017-02-15T13:43:18.247Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、如何建立决策树"><a href="#一、如何建立决策树" class="headerlink" title="一、如何建立决策树"></a>一、如何建立决策树</h3><h4 id="1、Hunt算法"><a href="#1、Hunt算法" class="headerlink" title="1、Hunt算法"></a>1、Hunt算法</h4><p>Hunt算法是许多决策树算法的基础，包括ID3、C4.5、CART。<br>Hunt算法步骤：</p>
<blockquote>
<p>（1）如果Dt中所有数据都属于同一个类yt，则t是叶结点，用yt标记。<br>（2）如果Dt中包含属于多个类的数据，则选择一个属性，将数据划分为较小子集。创建子女结点，将数据按属性放入子女结点中，然后递归调用该算法。</p>
</blockquote>
<p>但是该算法对于大多数情况太苛刻了，需要附加：</p>
<blockquote>
<p>（1）没有可以选择的属性，则该结点为叶结点，类标号为父结点上较多数的类。<br>（2）如果与Dt相关的数据均为同一个属性，则不可以继续划分，类标号为多数类。</p>
</blockquote>
<a id="more"></a>
<h4 id="2、属性划分"><a href="#2、属性划分" class="headerlink" title="2、属性划分"></a>2、属性划分</h4><h6 id="（1）标称变量"><a href="#（1）标称变量" class="headerlink" title="（1）标称变量"></a>（1）标称变量</h6><p>标称变量，二元划分和多路划分。CART只产生二元划分，考虑k个属性的二元划分有$2^{k-1}-1$种方法。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-4a413987d4132bf5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4_01.png"></p>
<h6 id="（2）有序变量"><a href="#（2）有序变量" class="headerlink" title="（2）有序变量"></a>（2）有序变量</h6><p>有序变量，也可以是二元划分和多路划分，但是不能违背有序性。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-257b4c916aa27474.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4_02.png"></p>
<h4 id="3、属性划分标准"><a href="#3、属性划分标准" class="headerlink" title="3、属性划分标准"></a>3、属性划分标准</h4><p>选择最佳划分的度量是根据划分后子女结点的不纯度度量。不纯度越低（纯度越高！），划分效果越好。</p>
<h6 id="（1）不纯度度量："><a href="#（1）不纯度度量：" class="headerlink" title="（1）不纯度度量："></a>（1）不纯度度量：</h6><p>$$Entropy(t)=-\sum_{i=0}^{c-1}p(i|t)log_{2}p(i|t),Entropy(t)\in[0,1]$$<br>$$Gini(t)=1-\sum_{i=0}^{c-1}[p(i|t)]^{2},Gini(t)\in[0,0.5]$$<br>$$ClassificationError(t)=1-max_{i}[p(i|t)],ClassificationError(t)\in[0,0.5]$$<br><img src="http://upload-images.jianshu.io/upload_images/3341358-3c0a745245ba6bbd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4_03.png"><br>三个度量方法都是希望取值越小越好（越纯）。</p>
<h6 id="（2）结点度量："><a href="#（2）结点度量：" class="headerlink" title="（2）结点度量："></a>（2）结点度量：</h6><p>为了确定测试结点效果，我们比较父节点（划分前）、子女结点（划分后）的不纯度变化。<br><strong>信息增益：</strong><br>$$\Delta = I(parent)-\sum_{j=1}^{k}\frac{N(v_{j})}{N}I(v_{j})$$<br>其中 $I$ 为不纯度的度量，关于 $N$ 的计算是划分后的个数加权。<br>$I$ 为熵（Entropy）的时候，$\Delta$ 为信息增益。<br><strong>信息增益率（Gain Ratio）：</strong><br>$$GainRatio=\frac{\Delta_{info}}{SplitInfo}=\frac{\Delta_{info}}{-\sum_{i=0}^{c-1}p(i)log_{2}p(i)}$$<br>使用信息增益率，好处是把属性测试条件产生的输出数也考虑进去。说明如果某个属性产生了大量的划分，它的划分信息会很大，从而降低了增益率。<br><strong><em>注：信息增益、信息增益率，我们希望越大越好，表示变化。</em></strong></p>
<h6 id="（3）连续变量的划分："><a href="#（3）连续变量的划分：" class="headerlink" title="（3）连续变量的划分："></a>（3）连续变量的划分：</h6><p>先对数据进行排序后，按照离散点的取值计算。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-62b82142cf5b135e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4_04.png"><br>Gini和熵趋向于有大量不同值的属性。</p>
<h4 id="4、决策树算法"><a href="#4、决策树算法" class="headerlink" title="4、决策树算法"></a>4、决策树算法</h4><h6 id="（1）决策树归纳算法："><a href="#（1）决策树归纳算法：" class="headerlink" title="（1）决策树归纳算法："></a>（1）决策树归纳算法：</h6><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">TreeGrowth(E,F):</div><div class="line">  if stopping_cond(E,F)=true then</div><div class="line">    leaf = createNode()</div><div class="line">    leaf.label = Classify(E)</div><div class="line">    return leaf</div><div class="line">  else</div><div class="line">    root = createNode()</div><div class="line">    root.test_cond = find_best_split(E,F)</div><div class="line">    令V=&#123;v|v是root.test_cond集合&#125;</div><div class="line">    for v in V do</div><div class="line">      Ev = &#123;e|v条件下的数据集合&#125;</div><div class="line">      child = TreeGrowth(Ev,F)</div><div class="line">      将child添加到树中去，将边(root-&gt;child)标记为v</div><div class="line">  return root</div></pre></td></tr></table></figure>
<h6 id="（2）决策树特点："><a href="#（2）决策树特点：" class="headerlink" title="（2）决策树特点："></a>（2）决策树特点：</h6><p>1、是一种非参数方法，不要求任何的先验假设。<br>2、找到最佳的决策树是NP完全问题。<br>3、相对容易解释。<br>4、对于噪声有相当好的鲁棒性。<br>5、冗余属性不会对决策树准确率造成影响。即为强相关性，一个用于划分，另一个则将被忽略。相反，不相关的属性，可能在构建树的过程中被偶然选中，导致决策树过于庞大。<br>6、数据碎片问题。当深度越深的时候，数据可能会太少，从而不能做出有统计意义的判断，当样本量小于某个阈值的时候，应该停止分裂。<br>7、子树可能在决策树中重复多次，显得复杂，难以解释。</p>
<h6 id="（3）斜决策树（oblique-decision-tree）："><a href="#（3）斜决策树（oblique-decision-tree）：" class="headerlink" title="（3）斜决策树（oblique decision tree）："></a>（3）斜决策树（oblique decision tree）：</h6><p>这里涉及到的决策树都是每次选取一个变量分子集划分，对某些数据集（连续属性有着复杂建模）缺乏划分能力。<br>斜决策树可以克服这个问题。<br><img src="http://upload-images.jianshu.io/upload_images/3341358-208cab6618206bf6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="4_05.png"><br>测试条件为：<br>$$ x+y&lt;1$$<br>另一种方法是，构造归纳法（constructive induction），该方法创建复合属性，代表已有的属性的算术、逻辑组合。<br>构造归纳的花费较低，而斜决策树要动态的确定属性组合，但构造归纳会产生冗余属性。</p>
<h4 id="5、模型过拟合"><a href="#5、模型过拟合" class="headerlink" title="5、模型过拟合"></a>5、模型过拟合</h4><p>分类模型误差分为：训练误差（training error）、泛化误差（generalization error）。<br>一个好的模型需要有较低的泛化误差和训练误差。</p>
<h6 id="奥卡姆剃刀（Occam’s-razor）："><a href="#奥卡姆剃刀（Occam’s-razor）：" class="headerlink" title="奥卡姆剃刀（Occam’s razor）："></a>奥卡姆剃刀（Occam’s razor）：</h6><p>给定两个具有相同泛化误差的模型，较简单的模型比较复杂的模型更可取。</p>
<h6 id="悲观误差估计（pessimistic-error-estimate）："><a href="#悲观误差估计（pessimistic-error-estimate）：" class="headerlink" title="悲观误差估计（pessimistic error estimate）："></a>悲观误差估计（pessimistic error estimate）：</h6><p>$$e_{g}(T)=\frac{\sum_{i=1}^{k}[e(t_{i})+\Omega (t_{i})]}{\sum_{i=1}^{k}n(t_{i})}=\frac{e(T)+\Omega(T)}{N_{t}}$$<br>$k$是决策树的<strong>叶节点</strong>数目，$e(T)$为总训练误差，$N_{t}$为总训练样本数，$\Omega$为罚项。<br>对二叉树来说，0.5的罚项意味着只要至少能够改善一个训练记录分类，结点就应当扩展，当1位罚项，意味着除非能够减少一个以上训练记录的误分类，否则结点不应当扩展。</p>
<h6 id="先剪枝："><a href="#先剪枝：" class="headerlink" title="先剪枝："></a>先剪枝：</h6><p>当达到某个条件，提前终止。例如：当观察到某个不纯度度量低于某个确定阈值时就停止扩展叶结点，但是，难点在于很难确定正确终止的阈值。</p>
<h6 id="后剪枝："><a href="#后剪枝：" class="headerlink" title="后剪枝："></a>后剪枝：</h6><p>初始按照最大规模生长，按照自底向上修剪决策树。修剪方式：<br>（1）子树替换（subtree replacement）用叶结点替代子树，叶结点的类标号为子树的多数类；<br>（2）子树提升（subtree raising）子树中最常使用的分支替代子树。后剪枝能产生更好的结果。</p>
<h4 id="6、评估分类器性能"><a href="#6、评估分类器性能" class="headerlink" title="6、评估分类器性能"></a>6、评估分类器性能</h4><h6 id="自助法（bootstrap）："><a href="#自助法（bootstrap）：" class="headerlink" title="自助法（bootstrap）："></a>自助法（bootstrap）：</h6><p>训练集是对于原数据集的有放回抽样，如果原始数据集$N$，可以证明，大小为$N$的自助样本大约包含原数据63.2%的记录。当$N$充分大的时候，$1-(1-\frac{1}{N})^{N}$ 概率逼近 $1-e^{-1}=0.632$。抽样 $b$ 次，产生 $b$ 个bootstrap样本，则，总准确率为（$acc_{s}$为包含所有样本计算的准确率）：<br>$$ acc_{boot}=\frac{1}{b}\sum_{i=1}^{b}(0.632\times\varepsilon _{i}+0.368\times acc_{s})$$</p>
<h6 id="准确度的区间估计："><a href="#准确度的区间估计：" class="headerlink" title="准确度的区间估计："></a>准确度的区间估计：</h6><p>将分类问题看做二项分布，则有：<br>令 $X $为模型正确分类，$p$ 为准确率，$X $服从均值 $Np$、方差 $Np(1-p)$的二项分布。$acc=\frac{X}{N}$为均值 $p$，方差 $\frac{p(1-p)}{N}$ 的二项分布。$acc$ 的置信区间：<br>$$ P\left(-Z_{\frac{\alpha }{2}} \leq \frac{acc-p}{\sqrt{p(1-p)/N}} \leq Z_{1-\frac{\alpha}{2}}\right)=1-\alpha$$<br>$$ P\in\frac{2\times N \times acc +Z_{\frac{\alpha}{2}}^{2}\pm Z_{\frac{\alpha}{2}}\sqrt{Z_{\frac{\alpha}{2}}^{2}+4\times N \times acc-4\times N \times acc^{2}}}{2(N+Z_{\frac{\alpha}{2}}^{2})}$$</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、如何建立决策树&quot;&gt;&lt;a href=&quot;#一、如何建立决策树&quot; class=&quot;headerlink&quot; title=&quot;一、如何建立决策树&quot;&gt;&lt;/a&gt;一、如何建立决策树&lt;/h3&gt;&lt;h4 id=&quot;1、Hunt算法&quot;&gt;&lt;a href=&quot;#1、Hunt算法&quot; class=&quot;headerlink&quot; title=&quot;1、Hunt算法&quot;&gt;&lt;/a&gt;1、Hunt算法&lt;/h4&gt;&lt;p&gt;Hunt算法是许多决策树算法的基础，包括ID3、C4.5、CART。&lt;br&gt;Hunt算法步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）如果Dt中所有数据都属于同一个类yt，则t是叶结点，用yt标记。&lt;br&gt;（2）如果Dt中包含属于多个类的数据，则选择一个属性，将数据划分为较小子集。创建子女结点，将数据按属性放入子女结点中，然后递归调用该算法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是该算法对于大多数情况太苛刻了，需要附加：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1）没有可以选择的属性，则该结点为叶结点，类标号为父结点上较多数的类。&lt;br&gt;（2）如果与Dt相关的数据均为同一个属性，则不可以继续划分，类标号为多数类。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="分类算法" scheme="http://yoursite.com/tags/%E5%88%86%E7%B1%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>数据</title>
    <link href="http://yoursite.com/2017/02/15/ML_ITDM_data/"/>
    <id>http://yoursite.com/2017/02/15/ML_ITDM_data/</id>
    <published>2017-02-15T12:47:32.000Z</published>
    <updated>2017-02-15T12:47:40.962Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、数据知识"><a href="#一、数据知识" class="headerlink" title="一、数据知识"></a>一、数据知识</h4><p>如果若干属性是强相关的，则说明这些属性可能提供了高度冗余的信息，我们可以决定只保留一个。</p>
<h4 id="二、数据预处理"><a href="#二、数据预处理" class="headerlink" title="二、数据预处理"></a>二、数据预处理</h4><h5 id="1、维规约："><a href="#1、维规约：" class="headerlink" title="1、维规约："></a>1、维规约：</h5><p>通过创建新属性，将一些旧属性合并在一起来降低数据的维度。通过选择旧属性的子集得到的新属性，这种维规约称为特征子集选择。<br><a id="more"></a></p>
<h5 id="2、维灾难："><a href="#2、维灾难：" class="headerlink" title="2、维灾难："></a>2、维灾难：</h5><p>数据维度（属性）过高。数据稀疏，对于分类，没有足够多的数据用于建模；对于聚类，点之间的密度和距离定义失去了意义，分类准确率降低。</p>
<h5 id="3、数据离散化："><a href="#3、数据离散化：" class="headerlink" title="3、数据离散化："></a>3、数据离散化：</h5><p>将连续型变量离散化为离散型变量。</p>
<h6 id="（1）非监督离散化："><a href="#（1）非监督离散化：" class="headerlink" title="（1）非监督离散化："></a>（1）非监督离散化：</h6><p><img src="http://upload-images.jianshu.io/upload_images/3341358-1454dcb18146b13a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2_01.png"></p>
<p><em>这里注意K均值离散化是什么样的技术，去寻找资料。</em></p>
<h6 id="（2）监督离散化："><a href="#（2）监督离散化：" class="headerlink" title="（2）监督离散化："></a>（2）监督离散化：</h6><p>计算熵，希望获得最小的熵：</p>
<p>$$ e_{i}=-\sum_{k}^{j=1}p_{ij}*log_{2}(p_{ij}) $$</p>
<p>$$ e=\sum_{i=1}^{n}w_{i}e_{i} $$ </p>
<p>其中e为该区间的熵。<br>若纯：对于$p_{ij} = 0$或者1，$e_{i} = 0$<br>若不纯：则熵最大。</p>
<h5 id="4、变量变换"><a href="#4、变量变换" class="headerlink" title="4、变量变换"></a>4、变量变换</h5><p>标准化：创建一个变量，使得它有均值为0，标准差为1</p>
<p>$$ x’=\frac{x-\bar{x}}{s_{x}} $$ </p>
<p>均值和标准差受离群点的影响很大，通常需要使用其他变化，用中位数（median）代替均值，使用绝对标准差（absolute standard deviation）取代标准差。绝对标准差：</p>
<p>$$ \sigma_{A}=\sum_{i=1}^{m}\left|x_{i}-\mu\right| $$ </p>
<h4 id="三、属性的相似度和相异度"><a href="#三、属性的相似度和相异度" class="headerlink" title="三、属性的相似度和相异度"></a>三、属性的相似度和相异度</h4><h5 id="1、相异度，距离"><a href="#1、相异度，距离" class="headerlink" title="1、相异度，距离"></a>1、相异度，距离</h5><p>闵可夫斯基距离（Minkowski distance）：</p>
<p>$$ d(x,y)=\left(\sum_{k=1}^{n}\left|x_{k}-y_{k}\right|^{r}\right)^{\frac{1}{r}} $$ </p>
<p>注：$r=1$时，曼哈顿距离。$r=2$时，欧几里得距离。r=无穷时，上确界距离。<br>距离的性质：<br>（1）非负性；（2）对称性；（3）三角不等式。</p>
<h5 id="2、相似度"><a href="#2、相似度" class="headerlink" title="2、相似度"></a>2、相似度</h5><h6 id="（1）简单匹配系数（Simple-Matching-Coefficient，SMC）"><a href="#（1）简单匹配系数（Simple-Matching-Coefficient，SMC）" class="headerlink" title="（1）简单匹配系数（Simple Matching Coefficient，SMC）"></a>（1）简单匹配系数（Simple Matching Coefficient，SMC）</h6><p>$$ SMC=\frac{f_{11}+f_{00}}{f_{01}+f_{10}+f_{11}+f_{00}} $$ </p>
<p>其中$f_{11}$表示：x取1并且y取1的属性个数。其他类似。SMC可以是一个仅包含<strong>是非题</strong>的检测中用来发现回答问题相似的学生。</p>
<h6 id="（2）Jaccard系数"><a href="#（2）Jaccard系数" class="headerlink" title="（2）Jaccard系数"></a>（2）Jaccard系数</h6><p>$$ J=\frac{f_{11}}{f_{01}+f_{10}+f_{11}} $$ </p>
<p>以上两个系数，均用于二元变量，0-1的计算。</p>
<h6 id="（3）余弦相似度"><a href="#（3）余弦相似度" class="headerlink" title="（3）余弦相似度"></a>（3）余弦相似度</h6><p>$$ cos(x,y)=\frac{x\cdot y}{\left | x \right |\left | y \right |}=\frac{x}{\left|x\right|}\cdot \frac{y}{\left|y\right|}=x’\cdot y’ $$ </p>
<p>余弦相似度从等式右边，可以看出不需要考虑量值。其中，有向量点积计算公式：</p>
<p>$$ x\cdot y=\sum_{n}^{k=1}x_{k}y_{k},\left | x \right |=\sqrt{\sum_{n}^{k=1}x_{k}^{2}}=\sqrt{x\cdot x} $$ </p>
<h6 id="（4）广义Jaccard系数（Tanimoto系数，EJ）"><a href="#（4）广义Jaccard系数（Tanimoto系数，EJ）" class="headerlink" title="（4）广义Jaccard系数（Tanimoto系数，EJ）"></a>（4）广义Jaccard系数（Tanimoto系数，EJ）</h6><p>$$ EJ(x,y)=\frac{x\cdot y}{\left | x \right |^{2}+\left | y \right |^{2}-x\cdot y}$$ </p>
<h6 id="（5）相关性"><a href="#（5）相关性" class="headerlink" title="（5）相关性"></a>（5）相关性</h6><p>Pearson相关系数，[-1,1]之间：</p>
<p>$$ corr(x,y)=\frac{S_{xy}}{S_{x}S_{y}}=\frac{\frac{1}{n-1}\sum_{k=1}^{n}(x_{k}-\bar{x})(y_{k}-\bar{y})}{\sqrt{\frac{1}{n-1}\sum_{k=1}^{n}(x_{k}-\bar{x})^{2}}\cdot \sqrt{\frac{1}{n-1}\sum_{k=1}^{n}(y_{k}-\bar{y})^{2}}}$$ </p>
<p>Bregman散度：<br>失真函数，损失函数。y为原来的点，x为某个失真值。给定一个严格凸函数，Bregman散度D（x，y）：</p>
<p>$$ D(x,y)=\phi (x)+\phi (y)-\left \langle \triangledown \phi(y),(x-y) \right \rangle$$ </p>
<p>后面的为梯度和内积。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/3341358-1ccfbf4c5fc680d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2_02.png"></p>
<p>$y=1$时，在$x=2$和$x=3$上的Bregman散度。</p>
<h6 id="（6）马氏距离（Mahalanobis距离）"><a href="#（6）马氏距离（Mahalanobis距离）" class="headerlink" title="（6）马氏距离（Mahalanobis距离）"></a>（6）马氏距离（Mahalanobis距离）</h6><p>$$ mahalanobis(x,y)=(x-y)\Sigma ^{-1}(x-y)^{T}$$ </p>
<p>x，y为两个点，中间的为数据协方差的逆。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一、数据知识&quot;&gt;&lt;a href=&quot;#一、数据知识&quot; class=&quot;headerlink&quot; title=&quot;一、数据知识&quot;&gt;&lt;/a&gt;一、数据知识&lt;/h4&gt;&lt;p&gt;如果若干属性是强相关的，则说明这些属性可能提供了高度冗余的信息，我们可以决定只保留一个。&lt;/p&gt;
&lt;h4 id=&quot;二、数据预处理&quot;&gt;&lt;a href=&quot;#二、数据预处理&quot; class=&quot;headerlink&quot; title=&quot;二、数据预处理&quot;&gt;&lt;/a&gt;二、数据预处理&lt;/h4&gt;&lt;h5 id=&quot;1、维规约：&quot;&gt;&lt;a href=&quot;#1、维规约：&quot; class=&quot;headerlink&quot; title=&quot;1、维规约：&quot;&gt;&lt;/a&gt;1、维规约：&lt;/h5&gt;&lt;p&gt;通过创建新属性，将一些旧属性合并在一起来降低数据的维度。通过选择旧属性的子集得到的新属性，这种维规约称为特征子集选择。&lt;br&gt;
    
    </summary>
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据挖掘" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/"/>
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>cmd设置命令缓存（伪别名）</title>
    <link href="http://yoursite.com/2017/02/14/windows_bat_alias/"/>
    <id>http://yoursite.com/2017/02/14/windows_bat_alias/</id>
    <published>2017-02-14T12:34:00.000Z</published>
    <updated>2017-02-15T12:56:38.019Z</updated>
    
    <content type="html"><![CDATA[<p>1、创建一个bat文件，alias.bat，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">doskey ls=dir</div><div class="line">doskey python3=C:\Users\xxxx\Anaconda3\python.exe</div><div class="line">doskey pip3=C:\Users\xxxx\Anaconda3\Scripts\pip.exe</div></pre></td></tr></table></figure></p>
<p>2、该文件保存于任意目录下，目录最好为英文，C:\Users\xxxx。<br>3、win+r，输入regedit，打开注册表。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Command</div><div class="line">HKEY_CURRENT_USER\Software\Microsoft\Command</div></pre></td></tr></table></figure></p>
<p><img src="/pictures/pic_20170214_2343.png" alt="图片未加载" title="pic_20170214_2343.png"></p>
<a id="more"></a>
<p>不过，可能没有AutoRun这个键，可以自己添加：右键——新建——字符串值，输入“AutoRun”，然后选中——右键——修改，把路径输入进去，大概像上图那样，然后关掉就可以了（这里我只改了CURRENT_USER的，没改HKEY_LOCAL_MACHINE，因为我觉得这样基本就够用了）</p>
<p>但是。这只是建立一个缓存，并不是真正意义上的别名。<br>自己尝试过只能直接使用“别名”，不能在“别名”的后面添加别的参数。如：<code>pip3 list</code>不能列出已安装的包，只能显示<code>pip</code>的帮助，相当于仅仅在命令行里输入<br><code>C:\Users\xxxx\Anaconda3\Scripts\pip.exe</code>，<br>而不是<code>C:\Users\xxxx\Anaconda3\Scripts\pip.exe list</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、创建一个bat文件，alias.bat，内容如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;doskey ls=dir&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;doskey python3=C:\Users\xxxx\Anaconda3\python.exe&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;doskey pip3=C:\Users\xxxx\Anaconda3\Scripts\pip.exe&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2、该文件保存于任意目录下，目录最好为英文，C:\Users\xxxx。&lt;br&gt;3、win+r，输入regedit，打开注册表。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Command&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;HKEY_CURRENT_USER\Software\Microsoft\Command&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/pictures/pic_20170214_2343.png&quot; alt=&quot;图片未加载&quot; title=&quot;pic_20170214_2343.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="http://yoursite.com/categories/Windows/"/>
    
    
      <category term="Windows" scheme="http://yoursite.com/tags/Windows/"/>
    
      <category term="bat" scheme="http://yoursite.com/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>awk</title>
    <link href="http://yoursite.com/2017/01/24/linux_awk/"/>
    <id>http://yoursite.com/2017/01/24/linux_awk/</id>
    <published>2017-01-24T12:37:00.000Z</published>
    <updated>2017-02-15T12:53:54.652Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、简单例子"><a href="#1、简单例子" class="headerlink" title="1、简单例子"></a>1、简单例子</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk  &apos;BEGIN &#123;print &quot;Hello world!&quot;&#125;&apos;        # 这个不需要文件输入就可以</div></pre></td></tr></table></figure>
<p><code>awkscr</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/^$/ &#123;print &quot;This is a blank line&quot;&#125;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>运行脚本文件<code>awkscr</code>对应于<code>test</code>文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk -f awkscr test</div></pre></td></tr></table></figure></p>
<p>例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo a b c d | awk &apos;&#123;one=1;two=2&#125;&#123;print $(one + two)&#125;&apos;</div></pre></td></tr></table></figure></p>
<blockquote>
<p>-F “\t” ：表示分隔符为\t<br>FS：表示分隔符</p>
</blockquote>
<p>灵活指定分隔符，正则指定<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">BEGIN &#123;FS=&quot;,&quot;&#125;&#123;print $1  &quot;,&quot;  $6&#125;   # 使用，为分隔符</div><div class="line">FS=&quot;\t&quot;                # 指定一个 tab 为分隔符</div><div class="line">FS=&quot;\t+&quot;              # 指定一个以上的 tab 为分隔符【正则】</div><div class="line">FS=&quot;[&apos;:\t]&quot;            # 指定&apos;、:、 tab 中任何一个为分隔符</div></pre></td></tr></table></figure></p>
<h4 id="2、模式匹配"><a href="#2、模式匹配" class="headerlink" title="2、模式匹配"></a>2、模式匹配</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">awk &apos;/^$/ &#123;print &quot;This is a blank line&quot;&#125;&apos;  test</div><div class="line">awk &apos;/[0-9]/ &#123;print &quot;This is a blank line&quot;&#125;&apos;  test</div><div class="line">awk &apos;/[A-Za-z]/ &#123;print &quot;This is a blank line&quot;&#125;&apos;  test</div></pre></td></tr></table></figure>
<p><a href="http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html" target="_blank" rel="external">http://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html</a></p>
<p><a href="http://awk.readthedocs.io/en/latest/chapter-one.html" target="_blank" rel="external">http://awk.readthedocs.io/en/latest/chapter-one.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、简单例子&quot;&gt;&lt;a href=&quot;#1、简单例子&quot; class=&quot;headerlink&quot; title=&quot;1、简单例子&quot;&gt;&lt;/a&gt;1、简单例子&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;awk  &amp;apos;BEGIN &amp;#123;print &amp;quot;Hello world!&amp;quot;&amp;#125;&amp;apos;        # 这个不需要文件输入就可以&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;awkscr&lt;/code&gt;文件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/^$/ &amp;#123;print &amp;quot;This is a blank line&amp;quot;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>sz-rz-文件传输</title>
    <link href="http://yoursite.com/2017/01/24/linux_03_rzsz/"/>
    <id>http://yoursite.com/2017/01/24/linux_03_rzsz/</id>
    <published>2017-01-24T12:36:00.000Z</published>
    <updated>2017-02-15T12:53:47.114Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h3><h4 id="1、sz用法（下载）："><a href="#1、sz用法（下载）：" class="headerlink" title="1、sz用法（下载）："></a>1、sz用法（下载）：</h4><p>下载一个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sz filename</div></pre></td></tr></table></figure></p>
<p>下载多个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sz filename1 filename2</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>下载dir目录下的所有文件，不包含dir下的文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sz dir/*</div></pre></td></tr></table></figure></p>
<h4 id="2、rz用法（上传）："><a href="#2、rz用法（上传）：" class="headerlink" title="2、rz用法（上传）："></a>2、rz用法（上传）：</h4><p>输入rz回车后，会出现文件选择对话框，选择需要上传文件，一次可以指定多个文件，上传到服务器的路径为当前执行rz命令的目录。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Xshell&quot;&gt;&lt;a href=&quot;#Xshell&quot; class=&quot;headerlink&quot; title=&quot;Xshell&quot;&gt;&lt;/a&gt;Xshell&lt;/h3&gt;&lt;h4 id=&quot;1、sz用法（下载）：&quot;&gt;&lt;a href=&quot;#1、sz用法（下载）：&quot; class=&quot;headerlink&quot; title=&quot;1、sz用法（下载）：&quot;&gt;&lt;/a&gt;1、sz用法（下载）：&lt;/h4&gt;&lt;p&gt;下载一个文件&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sz filename&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;下载多个文件&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sz filename1 filename2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>linux 查看系统信息命令(比较全)</title>
    <link href="http://yoursite.com/2017/01/24/linux_02_com/"/>
    <id>http://yoursite.com/2017/01/24/linux_02_com/</id>
    <published>2017-01-24T12:35:00.000Z</published>
    <updated>2017-02-15T12:53:40.325Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"># uname -a # 查看内核/操作系统/CPU信息</div><div class="line"># head -n 1 /etc/issue # 查看操作系统版本</div><div class="line"># cat /proc/cpuinfo # 查看CPU信息</div><div class="line"># hostname # 查看计算机名</div><div class="line"># lspci -tv # 列出所有PCI设备</div><div class="line"># lsusb -tv # 列出所有USB设备</div><div class="line"># lsmod # 列出加载的内核模块</div><div class="line"># env # 查看环境变量资源</div><div class="line"># free -m # 查看内存使用量和交换区使用量</div><div class="line"># df -h # 查看各分区使用情况</div><div class="line"># du -sh &lt;目录名&gt; # 查看指定目录的大小</div><div class="line"># grep MemTotal /proc/meminfo # 查看内存总量</div><div class="line"># grep MemFree /proc/meminfo # 查看空闲内存量</div><div class="line"># uptime # 查看系统运行时间、用户数、负载</div><div class="line"># cat /proc/loadavg # 查看系统负载磁盘和分区</div><div class="line"># mount | column -t # 查看挂接的分区状态</div><div class="line"># fdisk -l # 查看所有分区</div><div class="line"># swapon -s # 查看所有交换分区</div><div class="line"># hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备)</div><div class="line"># dmesg | grep IDE # 查看启动时IDE设备检测状况网络</div><div class="line"># ifconfig # 查看所有网络接口的属性</div><div class="line"># iptables -L # 查看防火墙设置</div><div class="line"># route -n # 查看路由表</div><div class="line"># netstat -lntp # 查看所有监听端口</div><div class="line"># netstat -antp # 查看所有已经建立的连接</div><div class="line"># netstat -s # 查看网络统计信息进程</div><div class="line"># ps -ef # 查看所有进程</div><div class="line"># top # 实时显示进程状态用户</div><div class="line"># w # 查看活动用户</div><div class="line"># id &lt;用户名&gt; # 查看指定用户信息</div><div class="line"># last # 查看用户登录日志</div><div class="line"># cut -d: -f1 /etc/passwd # 查看系统所有用户</div><div class="line"># cut -d: -f1 /etc/group # 查看系统所有组</div><div class="line"># crontab -l # 查看当前用户的计划任务服务</div><div class="line"># chkconfig –list # 列出所有系统服务</div><div class="line"># chkconfig –list | grep on # 列出所有启动的系统服务程序</div><div class="line"># rpm -qa # 查看所有安装的软件包</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/di
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>一些常用命令</title>
    <link href="http://yoursite.com/2017/01/24/linux_01_base/"/>
    <id>http://yoursite.com/2017/01/24/linux_01_base/</id>
    <published>2017-01-24T12:34:00.000Z</published>
    <updated>2017-02-15T12:53:31.241Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、基本命令"><a href="#一、基本命令" class="headerlink" title="一、基本命令"></a>一、基本命令</h3><h4 id="（1）查看linux的信息"><a href="#（1）查看linux的信息" class="headerlink" title="（1）查看linux的信息"></a>（1）查看linux的信息</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">uname -a</div><div class="line">lsb_release -a</div><div class="line">cat /etc/redhat-release           # 查看服务器是Ubuntu还是Centos</div><div class="line">file /sbin/init 或者file /bin/ls    # 查看服务器是32、64位</div><div class="line">free -g                                    # 以G为单位，查看内存大小</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="（2）查看某文件夹下，文件夹的文件大小总和"><a href="#（2）查看某文件夹下，文件夹的文件大小总和" class="headerlink" title="（2）查看某文件夹下，文件夹的文件大小总和"></a>（2）查看某文件夹下，文件夹的文件大小总和</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -h --max-depth=1   # 深度为1的文件夹里面文件的总大小</div></pre></td></tr></table></figure>
<h4 id="（3）查找某文件的路径"><a href="#（3）查找某文件的路径" class="headerlink" title="（3）查找某文件的路径"></a>（3）查找某文件的路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find  /data0  -name  filename      # /data0表示目录文件，只找/data0下的名字叫filename的文件</div></pre></td></tr></table></figure>
<h4 id="（4）管道使用ls"><a href="#（4）管道使用ls" class="headerlink" title="（4）管道使用ls"></a>（4）管道使用ls</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">find  /data0  -name  filename | xargs ls -l</div></pre></td></tr></table></figure>
<h3 id="二、基本配置"><a href="#二、基本配置" class="headerlink" title="二、基本配置"></a>二、基本配置</h3><h4 id="（1）vim使用鼠标"><a href="#（1）vim使用鼠标" class="headerlink" title="（1）vim使用鼠标"></a>（1）vim使用鼠标</h4><p>在<code>.vimrc</code>中添加<code>set mouse=a</code>这句话，具体还有别的模式，这里不在叙述，尝试用<code>a</code>最合适。</p>
<h4 id="（2）vim显示行号"><a href="#（2）vim显示行号" class="headerlink" title="（2）vim显示行号"></a>（2）vim显示行号</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:set number</div></pre></td></tr></table></figure>
<h3 id="三、日期命令"><a href="#三、日期命令" class="headerlink" title="三、日期命令"></a>三、日期命令</h3><p>输出日期<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">date=`date -d &quot;+0 day $1&quot; +%Y-%m-%d`</div><div class="line">enddate=`date -d &quot;+1 day $2&quot; +%Y-%m-%d`</div><div class="line">while [[ $date &lt; $enddate  ]]</div><div class="line">do</div><div class="line">        echo $date</div><div class="line">        date=`date -d &quot;+1 day $date&quot; +%Y-%m-%d`</div><div class="line">done</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1) ls -lt  时间最近的在前面</div><div class="line">2) ls -ltr 时间从前到后</div><div class="line">3) 利用sort</div><div class="line">    ls -l | sort +7 (日期为第8列)   时间从前到后</div><div class="line">    ls -l | sort -r +7      时间最近的在前面</div></pre></td></tr></table></figure>
<h3 id="四、查看进程和杀死进程"><a href="#四、查看进程和杀死进程" class="headerlink" title="四、查看进程和杀死进程"></a>四、查看进程和杀死进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ps -ef</div><div class="line">ps -aux</div><div class="line">kill -s 9 1827    # 9是强制、尽快终止进程。1827是PID进程号</div></pre></td></tr></table></figure>
<h3 id="五、命令"><a href="#五、命令" class="headerlink" title="五、命令"></a>五、命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wc -l filename    # 显示文件的行数</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、基本命令&quot;&gt;&lt;a href=&quot;#一、基本命令&quot; class=&quot;headerlink&quot; title=&quot;一、基本命令&quot;&gt;&lt;/a&gt;一、基本命令&lt;/h3&gt;&lt;h4 id=&quot;（1）查看linux的信息&quot;&gt;&lt;a href=&quot;#（1）查看linux的信息&quot; class=&quot;headerlink&quot; title=&quot;（1）查看linux的信息&quot;&gt;&lt;/a&gt;（1）查看linux的信息&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;uname -a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lsb_release -a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cat /etc/redhat-release           # 查看服务器是Ubuntu还是Centos&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;file /sbin/init 或者file /bin/ls    # 查看服务器是32、64位&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;free -g                                    # 以G为单位，查看内存大小&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>例子</title>
    <link href="http://yoursite.com/2017/01/22/hive_hadoop_example/"/>
    <id>http://yoursite.com/2017/01/22/hive_hadoop_example/</id>
    <published>2017-01-22T12:35:00.000Z</published>
    <updated>2017-02-15T12:53:23.244Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE dev.tmp_check_sku_20161202</div><div class="line">AS</div><div class="line">SELECT</div><div class="line">    a.item_sku_id,</div><div class="line">    b.sku_id</div><div class="line">FROM</div><div class="line">    (SELECT item_sku_id,dt</div><div class="line">    FROM </div><div class="line">    gdm.gdm_m03_item_sku_da</div><div class="line">    WHERE dt= &apos;2016-10-08&apos;</div><div class="line">    AND sku_valid_flag=1) A</div><div class="line">    FULL OUTER JOIN</div><div class="line">    (SELECT sku_id,dt</div><div class="line">    FROM gdm.gdm_m08_item_stock_day_sum</div><div class="line">    WHERE dt= &apos;2016-10-08&apos;</div><div class="line">    ) B</div><div class="line">    ON  a.item_sku_id=b.sku_id</div></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-- 统计数据</div><div class="line">SELECT</div><div class="line">    CASE WHEN item_sku_id IS NOT NULL THEN 1 ELSE 0 END AS item_sku_cnt,</div><div class="line">    CASE WHEN sku_id IS NOT NULL THEN 1 ELSE 0 END AS sku_cnt,</div><div class="line">    count(1)</div><div class="line">FROM</div><div class="line">    dev.tmp_check_sku_20161202</div><div class="line">GROUP BY</div><div class="line">    CASE WHEN item_sku_id IS NOT NULL THEN 1 ELSE 0 END,</div><div class="line">    CASE WHEN sku_id IS NOT NULL THEN 1 ELSE 0 END</div><div class="line">-- 结果</div><div class="line">1    0    1    707489</div><div class="line">2    1    0    832084258</div><div class="line">3    1    1    81142196</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;CREATE TABLE dev.tmp_check_sku_20161202&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;AS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SELECT&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    a.item_sku_id,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    b.sku_id&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FROM&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (SELECT item_sku_id,dt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    FROM &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    gdm.gdm_m03_item_sku_da&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WHERE dt= &amp;apos;2016-10-08&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    AND sku_valid_flag=1) A&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    FULL OUTER JOIN&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (SELECT sku_id,dt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    FROM gdm.gdm_m08_item_stock_day_sum&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WHERE dt= &amp;apos;2016-10-08&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ) B&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ON  a.item_sku_id=b.sku_id&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hive&amp;Hadoop" scheme="http://yoursite.com/categories/Hive-Hadoop/"/>
    
    
      <category term="Hive" scheme="http://yoursite.com/tags/Hive/"/>
    
      <category term="Hadoop" scheme="http://yoursite.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>基本命令</title>
    <link href="http://yoursite.com/2017/01/22/hive_hadoop_base/"/>
    <id>http://yoursite.com/2017/01/22/hive_hadoop_base/</id>
    <published>2017-01-22T12:34:00.000Z</published>
    <updated>2017-02-15T12:53:13.574Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、设置动态分区"><a href="#1、设置动态分区" class="headerlink" title="1、设置动态分区"></a>1、设置动态分区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">set hive.exec.dynamic.partition=true;</div><div class="line">set hive.exec.dynamic.partition.mode=nonstrict;</div></pre></td></tr></table></figure>
<h3 id="2、设置最大动态分区"><a href="#2、设置最大动态分区" class="headerlink" title="2、设置最大动态分区"></a>2、设置最大动态分区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">set hive.exec.max.dynamic.partitions=2000;</div><div class="line">set hive.exec.max.dynamic.partitions.pernode=2000;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="3、创建动态分区表"><a href="#3、创建动态分区表" class="headerlink" title="3、创建动态分区表"></a>3、创建动态分区表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE IF NOT EXISTS dev.dev_allocation_sale_data</div><div class="line">    (    org_dc_id         string,</div><div class="line">        sale_ord_det_id string,   </div><div class="line">        sale_ord_id string,       </div><div class="line">        parent_sale_ord_id string,</div><div class="line">        item_sku_id                string,        -- skuid</div><div class="line">        sale_qtty                  int,        -- 销售数量</div><div class="line">        sale_ord_tm                string,        -- 销售订单订购时间</div><div class="line">        sale_ord_type             string,        -- 订单配送类型</div><div class="line">        sale_ord_white_flag        string,         -- 是否包括白名单</div><div class="line">        item_third_cate_cd  string,   --sku所属三级分类</div><div class="line">        item_second_cate_cd  string,      --sku所属二级分类</div><div class="line">        shelves_dt  string, --上架日期</div><div class="line">    shelves_tm   string --上架时间</div><div class="line">    )</div><div class="line">    PARTITIONED by (date_s string,dc_id int);</div></pre></td></tr></table></figure>
<h3 id="4、插入动态分区表"><a href="#4、插入动态分区表" class="headerlink" title="4、插入动态分区表"></a>4、插入动态分区表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">insert overwrite table dev.dev_allocation_sale_data partition(date_s,dc_id)</div><div class="line">select</div><div class="line">         a.org_dc_id,</div><div class="line">         case when b.sale_ord_id is not null then &apos;rdc&apos;</div><div class="line">         when c.sale_ord_id is not null then &apos;fdc_rdc&apos;    when d.sale_ord_id is not null    then &apos;fdc&apos; else &apos;other&apos; end,</div><div class="line">         d.white_flag,</div><div class="line">         a.item_third_cate_cd,</div><div class="line">         a.item_second_cate_cd,</div><div class="line">         a.shelves_dt,</div><div class="line">         a.shelves_tm,   </div><div class="line">         a.dt as date_s,</div><div class="line">         a.dc_id</div><div class="line">from</div><div class="line">        dev.tmp_allocation_order_data_mid01 a</div></pre></td></tr></table></figure>
<h3 id="5、取出hive数据"><a href="#5、取出hive数据" class="headerlink" title="5、取出hive数据"></a>5、取出hive数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">INSERT OVERWRITE  LOCAL  DIRECTORY  &apos;/home/cmo_ipc/Allocation_shell/datasets/sku_datasets&apos; </div><div class="line">select * from dev.dev_allocation_fdc_data;</div></pre></td></tr></table></figure>
<h3 id="动态分区"><a href="#动态分区" class="headerlink" title="动态分区"></a>动态分区</h3><p><a href="http://blog.csdn.net/kntao/article/details/38683645" target="_blank" rel="external">http://blog.csdn.net/kntao/article/details/38683645</a></p>
<p><a href="http://blog.csdn.net/chenyi8888/article/details/8236726" target="_blank" rel="external">http://blog.csdn.net/chenyi8888/article/details/8236726</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、设置动态分区&quot;&gt;&lt;a href=&quot;#1、设置动态分区&quot; class=&quot;headerlink&quot; title=&quot;1、设置动态分区&quot;&gt;&lt;/a&gt;1、设置动态分区&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;set hive.exec.dynamic.partition=true;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;set hive.exec.dynamic.partition.mode=nonstrict;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2、设置最大动态分区&quot;&gt;&lt;a href=&quot;#2、设置最大动态分区&quot; class=&quot;headerlink&quot; title=&quot;2、设置最大动态分区&quot;&gt;&lt;/a&gt;2、设置最大动态分区&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;set hive.exec.max.dynamic.partitions=2000;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;set hive.exec.max.dynamic.partitions.pernode=2000;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Hive&amp;Hadoop" scheme="http://yoursite.com/categories/Hive-Hadoop/"/>
    
    
      <category term="Hive" scheme="http://yoursite.com/tags/Hive/"/>
    
      <category term="Hadoop" scheme="http://yoursite.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>virtualenv 模块 虚拟环境</title>
    <link href="http://yoursite.com/2017/01/14/python_virtualenv/"/>
    <id>http://yoursite.com/2017/01/14/python_virtualenv/</id>
    <published>2017-01-14T12:34:00.000Z</published>
    <updated>2017-02-15T12:52:46.528Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、安装virtualenv"><a href="#1、安装virtualenv" class="headerlink" title="1、安装virtualenv"></a>1、安装virtualenv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div></pre></td></tr></table></figure>
<h3 id="2、进入到某个文件夹"><a href="#2、进入到某个文件夹" class="headerlink" title="2、进入到某个文件夹"></a>2、进入到某个文件夹</h3><h6 id="创建纯净python2环境"><a href="#创建纯净python2环境" class="headerlink" title="创建纯净python2环境"></a>创建纯净python2环境</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mkdir workspace</div><div class="line">cd workspace</div><div class="line">virtualenv python2</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>或者使用pycharm，也可以生成虚拟环境，不用的时候，直接删除文件就可以了。<br>进入虚拟环境后，pip安装时独立的，不会影响。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、安装virtualenv&quot;&gt;&lt;a href=&quot;#1、安装virtualenv&quot; class=&quot;headerlink&quot; title=&quot;1、安装virtualenv&quot;&gt;&lt;/a&gt;1、安装virtualenv&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;pip install virtualenv&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2、进入到某个文件夹&quot;&gt;&lt;a href=&quot;#2、进入到某个文件夹&quot; class=&quot;headerlink&quot; title=&quot;2、进入到某个文件夹&quot;&gt;&lt;/a&gt;2、进入到某个文件夹&lt;/h3&gt;&lt;h6 id=&quot;创建纯净python2环境&quot;&gt;&lt;a href=&quot;#创建纯净python2环境&quot; class=&quot;headerlink&quot; title=&quot;创建纯净python2环境&quot;&gt;&lt;/a&gt;创建纯净python2环境&lt;/h6&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;mkdir workspace&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cd workspace&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;virtualenv python2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>time 模块 时间格式</title>
    <link href="http://yoursite.com/2017/01/13/python_time/"/>
    <id>http://yoursite.com/2017/01/13/python_time/</id>
    <published>2017-01-13T12:34:00.000Z</published>
    <updated>2017-02-15T12:52:38.232Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、sleep-seconds"><a href="#1、sleep-seconds" class="headerlink" title="1、sleep(seconds)"></a>1、sleep(seconds)</h4><p>线程推迟指定的时间运行，单位为秒<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">time.sleep(10)</div></pre></td></tr></table></figure></p>
<h4 id="2、ctime-seconds-gt-string"><a href="#2、ctime-seconds-gt-string" class="headerlink" title="2、ctime(seconds) -&gt; string"></a>2、ctime(seconds) -&gt; string</h4><p>将一个时间戳(默认为当前时间)转换成一个时间字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">time.ctime()</div><div class="line">&gt;&gt; &apos;Tue Nov 29 17:51:02 2016&apos;</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h4 id="3、localtime-seconds-gt-tm-year-tm-mon-tm-day-tm-hour-tm-min-tm-sec-tm-wday-tm-yday-tm-isdst"><a href="#3、localtime-seconds-gt-tm-year-tm-mon-tm-day-tm-hour-tm-min-tm-sec-tm-wday-tm-yday-tm-isdst" class="headerlink" title="3、localtime([seconds]) -&gt; (tm_year,tm_mon,tm_day,tm_hour,tm_min,tm_sec,tm_wday,tm_yday,tm_isdst)"></a>3、localtime([seconds]) -&gt; (tm_year,tm_mon,tm_day,tm_hour,tm_min,tm_sec,tm_wday,tm_yday,tm_isdst)</h4><p>将一个时间戳转换成一个当前时区的struct_time，如果seconds参数未输入，则以当前时间为转换标准<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">time.localtime(time.time())</div><div class="line">&gt;&gt; time.struct_time(tm_year=2016, tm_mon=11, tm_mday=29, tm_hour=17, tm_min=52, tm_sec=14, tm_wday=1, tm_yday=334, tm_isdst=0)</div></pre></td></tr></table></figure></p>
<h4 id="4、strftime-format-tuple-gt-string"><a href="#4、strftime-format-tuple-gt-string" class="headerlink" title="4、strftime(format[, tuple]) -&gt; string"></a>4、strftime(format[, tuple]) -&gt; string</h4><p>将指定的struct_time(默认为当前时间)，根据指定的格式化字符串输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">time.strftime(&apos;%Y-%m-%d_%H-%M-%S&apos;,time.localtime())</div><div class="line">&gt;&gt; &apos;2016-11-29_17-57-51&apos;</div></pre></td></tr></table></figure></p>
<p>  python中时间日期格式化符号：<br>  %y 两位数的年份表示（00-99）<br>  %Y 四位数的年份表示（000-9999）<br>  %m 月份（01-12）<br>  %d 月内中的一天（0-31）<br>  %H 24小时制小时数（0-23）<br>  %I 12小时制小时数（01-12）<br>  %M 分钟数（00=59）<br>  %S 秒（00-59）<br>  %a 本地简化星期名称<br>  %A 本地完整星期名称<br>  %b 本地简化的月份名称<br>  %B 本地完整的月份名称<br>  %c 本地相应的日期表示和时间表示<br>  %j 年内的一天（001-366）<br>  %p 本地A.M.或P.M.的等价符<br>  %U 一年中的星期数（00-53）星期天为星期的开始<br>  %w 星期（0-6），星期天为星期的开始<br>  %W 一年中的星期数（00-53）星期一为星期的开始<br>  %x 本地相应的日期表示<br>  %X 本地相应的时间表示<br>  %Z 当前时区的名称<br>  %% %号本身 </p>
<h4 id="5、strptime-string-format-gt-struct-time"><a href="#5、strptime-string-format-gt-struct-time" class="headerlink" title="5、strptime(string, format) -&gt; struct_time"></a>5、strptime(string, format) -&gt; struct_time</h4><p>将时间字符串根据指定的格式化符转换成数组形式的时间</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1、sleep-seconds&quot;&gt;&lt;a href=&quot;#1、sleep-seconds&quot; class=&quot;headerlink&quot; title=&quot;1、sleep(seconds)&quot;&gt;&lt;/a&gt;1、sleep(seconds)&lt;/h4&gt;&lt;p&gt;线程推迟指定的时间运行，单位为秒&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;time.sleep(10)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;2、ctime-seconds-gt-string&quot;&gt;&lt;a href=&quot;#2、ctime-seconds-gt-string&quot; class=&quot;headerlink&quot; title=&quot;2、ctime(seconds) -&amp;gt; string&quot;&gt;&lt;/a&gt;2、ctime(seconds) -&amp;gt; string&lt;/h4&gt;&lt;p&gt;将一个时间戳(默认为当前时间)转换成一个时间字符串&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;time.ctime()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt; &amp;apos;Tue Nov 29 17:51:02 2016&amp;apos;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>python-dcox 模块 生成Word、docx文件</title>
    <link href="http://yoursite.com/2017/01/12/python_python-dcox/"/>
    <id>http://yoursite.com/2017/01/12/python_python-dcox/</id>
    <published>2017-01-12T12:36:00.000Z</published>
    <updated>2017-02-15T12:52:31.855Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://python-docx.readthedocs.io/en/latest/index.html" target="_blank" rel="external">http://python-docx.readthedocs.io/en/latest/index.html</a><br>生成word的利器！</p>
<h2 id="一、快速开始"><a href="#一、快速开始" class="headerlink" title="一、快速开始"></a>一、快速开始</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from docx import Document</div><div class="line">document = Document()</div></pre></td></tr></table></figure>
<a id="more"></a>
<h4 id="1、段落"><a href="#1、段落" class="headerlink" title="1、段落"></a>1、段落</h4><p>加一个段落，下面<code>paragraph</code>是前面内容的光标指向，后面再该处插入一句话。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paragraph = document.add_paragraph(&apos;Lorem ipsum dolor sit amet.&apos;)</div><div class="line">prior_paragraph = paragraph.insert_paragraph_before(&apos;Lorem ipsum&apos;)</div></pre></td></tr></table></figure></p>
<p>后面加一句话<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">paragraph = document.add_paragraph(&apos;Lorem ipsum &apos;)</div><div class="line">paragraph.add_run(&apos;dolor sit amet.&apos;)</div></pre></td></tr></table></figure></p>
<p>添加段落风格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.add_paragraph(&apos;Lorem ipsum dolor sit amet.&apos;, style=&apos;ListBullet&apos;)</div></pre></td></tr></table></figure></p>
<p>使用blod、italic 等等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">paragraph = document.add_paragraph(&apos;Lorem ipsum &apos;)</div><div class="line">run = paragraph.add_run(&apos;dolor&apos;)</div><div class="line">run.bold = True</div><div class="line">run.italic = True</div><div class="line">paragraph.add_run(&apos;dolor&apos;).bold = True</div></pre></td></tr></table></figure></p>
<h4 id="2、标题"><a href="#2、标题" class="headerlink" title="2、标题"></a>2、标题</h4><p><code>level</code>表示标题的大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.add_heading(&apos;The role of dolphins&apos;, level=2)</div></pre></td></tr></table></figure></p>
<h4 id="3、分页"><a href="#3、分页" class="headerlink" title="3、分页"></a>3、分页</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">document.add_page_break()</div></pre></td></tr></table></figure>
<h4 id="4、表格"><a href="#4、表格" class="headerlink" title="4、表格"></a>4、表格</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">table = document.add_table(rows=2, cols=2)</div></pre></td></tr></table></figure>
<h6 id="访问方法："><a href="#访问方法：" class="headerlink" title="访问方法："></a>访问方法：</h6><p>取出来，单独赋值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cell = table.cell(0, 1)</div><div class="line">cell.text = &apos;parrot, possibly dead&apos;</div></pre></td></tr></table></figure></p>
<p>依然使用二维数组类似的索引。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">row = table.rows[1]</div><div class="line">row.cells[0].text = &apos;Foo bar to you.&apos;</div><div class="line">row.cells[1].text = &apos;And a hearty foo bar to you too sir!&apos;</div></pre></td></tr></table></figure></p>
<p>分清楚结构<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for row in table.rows:</div><div class="line">    for cell in row.cells:</div><div class="line">        print(cell.text)</div></pre></td></tr></table></figure></p>
<p>查看信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">row_count = len(table.rows)</div><div class="line">col_count = len(table.columns)</div></pre></td></tr></table></figure></p>
<h6 id="添加一行"><a href="#添加一行" class="headerlink" title="添加一行"></a>添加一行</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">row = table.add_row()</div></pre></td></tr></table></figure>
<h6 id="动态添加表格"><a href="#动态添加表格" class="headerlink" title="动态添加表格"></a>动态添加表格</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">table = document.add_table(1, 3)</div><div class="line"># 标题</div><div class="line">heading_cells = table.rows[0].cells</div><div class="line">heading_cells[0].text = &apos;Qty&apos;</div><div class="line">heading_cells[1].text = &apos;SKU&apos;</div><div class="line">heading_cells[2].text = &apos;Description&apos;</div><div class="line"># 添加内容</div><div class="line">for item in items:</div><div class="line">    cells = table.add_row().cells</div><div class="line">    cells[0].text = str(item.column1)</div><div class="line">    cells[1].text = item.column2</div><div class="line">    cells[2].text = item.column3</div></pre></td></tr></table></figure>
<h4 id="5、添加图片"><a href="#5、添加图片" class="headerlink" title="5、添加图片"></a>5、添加图片</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from docx.shared import Inches</div><div class="line">document.add_picture(&apos;image-filename.png&apos;, width=Inches(1.25), height=Inches(1.25))</div></pre></td></tr></table></figure>
<h2 id="二、操作document"><a href="#二、操作document" class="headerlink" title="二、操作document"></a>二、操作document</h2><p>只能打开07之后的，会覆盖。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">document = Document(&apos;existing-document-file.docx&apos;)</div><div class="line">document.save(&apos;new-file-name.docx&apos;)</div></pre></td></tr></table></figure></p>
<p>打开文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">f = open(&apos;foobar.docx&apos;, &apos;rb&apos;)</div><div class="line">document = Document(f)</div><div class="line">f.close()</div><div class="line"># or</div><div class="line">with open(&apos;foobar.docx&apos;, &apos;rb&apos;) as f:</div><div class="line">    source_stream = StringIO(f.read())</div><div class="line">document = Document(source_stream)</div><div class="line">source_stream.close()</div><div class="line">...</div><div class="line">target_stream = StringIO()</div><div class="line">document.save(target_stream)</div></pre></td></tr></table></figure></p>
<h2 id="三、操作text"><a href="#三、操作text" class="headerlink" title="三、操作text"></a>三、操作text</h2><p>段落居中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">from docx.enum.text import WD_ALIGN_PARAGRAPH</div><div class="line">document = Document()</div><div class="line">paragraph = document.add_paragraph()</div><div class="line">paragraph_format = paragraph.paragraph_format</div><div class="line">paragraph_format.alignment = WD_ALIGN_PARAGRAPH.CENTER</div></pre></td></tr></table></figure></p>
<p>左边整体缩进<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">from docx.shared import Inches</div><div class="line">paragraph = document.add_paragraph()</div><div class="line">paragraph_format = paragraph.paragraph_format</div><div class="line">paragraph_format.left_indent = Inches(0.5)</div></pre></td></tr></table></figure></p>
<p>右边整体缩进<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from docx.shared import Pt</div><div class="line">paragraph_format.right_indent = Pt(24)</div></pre></td></tr></table></figure></p>
<p>首行缩进<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">paragraph_format.first_line_indent = Inches(-0.25)</div></pre></td></tr></table></figure></p>
<p>从字体调节，字体大小<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">run = document.add_paragraph().add_run()</div><div class="line">font = run.font</div><div class="line">from docx.shared import Pt</div><div class="line">font.size = Pt(10.5)  # 5号字体</div><div class="line">font.italic = True</div><div class="line">font.underline = True</div></pre></td></tr></table></figure></p>
<p>字体颜色<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">from docx.shared import RGBColor</div><div class="line">font.color.rgb = RGBColor(0x42, 0x24, 0xE9)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://python-docx.readthedocs.io/en/latest/index.html&quot;&gt;http://python-docx.readthedocs.io/en/latest/index.html&lt;/a&gt;&lt;br&gt;生成word的利器！&lt;/p&gt;
&lt;h2 id=&quot;一、快速开始&quot;&gt;&lt;a href=&quot;#一、快速开始&quot; class=&quot;headerlink&quot; title=&quot;一、快速开始&quot;&gt;&lt;/a&gt;一、快速开始&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;from docx import Document&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;document = Document()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>pickle 模块 序列化</title>
    <link href="http://yoursite.com/2017/01/12/python_pickle/"/>
    <id>http://yoursite.com/2017/01/12/python_pickle/</id>
    <published>2017-01-12T12:35:00.000Z</published>
    <updated>2017-02-15T12:52:24.794Z</updated>
    
    <content type="html"><![CDATA[<p>使用pickle模块将数据对象保存到文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">import pickle</div><div class="line"> </div><div class="line">data1 = &#123;&apos;a&apos;: [1, 2.0, 3, 4+6j],</div><div class="line">         &apos;b&apos;: (&apos;string&apos;, u&apos;Unicode string&apos;),</div><div class="line">         &apos;c&apos;: None&#125;</div><div class="line"> </div><div class="line">selfref_list = [1, 2, 3]</div><div class="line">selfref_list.append(selfref_list)</div><div class="line"> </div><div class="line">output = open(&apos;data.pkl&apos;, &apos;wb&apos;)</div><div class="line"> </div><div class="line"># Pickle dictionary using protocol 0.</div><div class="line">pickle.dump(data1, output)</div><div class="line"> </div><div class="line"># Pickle the list using the highest protocol available.</div><div class="line">pickle.dump(selfref_list, output, -1)</div><div class="line"> </div><div class="line">output.close()</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>使用pickle模块从文件中重构python对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">import pprint, pickle</div><div class="line"> </div><div class="line">pkl_file = open(&apos;data.pkl&apos;, &apos;rb&apos;)</div><div class="line"> </div><div class="line">data1 = pickle.load(pkl_file)</div><div class="line">pprint.pprint(data1)</div><div class="line"> </div><div class="line">data2 = pickle.load(pkl_file)</div><div class="line">pprint.pprint(data2)</div><div class="line"> </div><div class="line">pkl_file.close()</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用pickle模块将数据对象保存到文件&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import pickle&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;data1 = &amp;#123;&amp;apos;a&amp;apos;: [1, 2.0, 3, 4+6j],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;apos;b&amp;apos;: (&amp;apos;string&amp;apos;, u&amp;apos;Unicode string&amp;apos;),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;apos;c&amp;apos;: None&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;selfref_list = [1, 2, 3]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;selfref_list.append(selfref_list)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;output = open(&amp;apos;data.pkl&amp;apos;, &amp;apos;wb&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Pickle dictionary using protocol 0.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pickle.dump(data1, output)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Pickle the list using the highest protocol available.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pickle.dump(selfref_list, output, -1)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;output.close()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>os/sys 模块 python操作文件路径</title>
    <link href="http://yoursite.com/2017/01/12/python_os_sys/"/>
    <id>http://yoursite.com/2017/01/12/python_os_sys/</id>
    <published>2017-01-12T12:34:00.000Z</published>
    <updated>2017-02-15T12:52:09.507Z</updated>
    
    <content type="html"><![CDATA[<h3 id="当前路径："><a href="#当前路径：" class="headerlink" title="当前路径："></a>当前路径：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys, os</div><div class="line">pwd = sys.path[<span class="number">0</span>]    <span class="comment"># 获取当前执行脚本的位置</span></div></pre></td></tr></table></figure>
<h3 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h3><blockquote>
<ul>
<li><strong>`</strong>file<strong>`</strong>：当前文件完整路径，包括文件名</li>
<li><strong>os.path.dirname(file)</strong>: 某个文件所在的目录路径</li>
<li><strong>os.path.join(a, b, c,….)</strong>: 路径构造 a/b/c</li>
<li><strong>os.path.abspath(path)</strong>: 将path从相对路径转成绝对路径</li>
<li><strong>os.pardir</strong>: Linux下相当于”../“，上一级目录的标志</li>
</ul>
</blockquote>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir, os.pardir))</div></pre></td></tr></table></figure>
<h3 id="搜索当前文件的前n"><a href="#搜索当前文件的前n" class="headerlink" title="搜索当前文件的前n"></a>搜索当前文件的前n</h3><p><code>__file__</code> = r’D:\Lgb\ipc_inv_opt\src\com\jd\pbs\analysis\test.py’<br>运行uppath(4)<br>定位到 r’D:\Lgb\ipc_inv_opt\src’<br>[analysis]-pbs-jd-com-src<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">uppath</span><span class="params">(n=<span class="number">1</span>)</span>:</span></div><div class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</div><div class="line">        <span class="keyword">return</span> os.path.abspath(os.path.dirname(__file__))</div><div class="line">    <span class="keyword">return</span> os.path.abspath(os.path.join(os.path.dirname(__file__), (os.pardir + os.sep) * (n - <span class="number">1</span>) + os.pardir))</div></pre></td></tr></table></figure></p>
<h3 id="1、判断文件夹存在"><a href="#1、判断文件夹存在" class="headerlink" title="1、判断文件夹存在"></a>1、判断文件夹存在</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">if os.path.exists(total_path) == False:</div><div class="line">    os.mkdir(total_path)</div></pre></td></tr></table></figure>
<h3 id="2、添加当前目录到-import-的路径中，当前目录需要有init"><a href="#2、添加当前目录到-import-的路径中，当前目录需要有init" class="headerlink" title="2、添加当前目录到 import 的路径中，当前目录需要有init"></a>2、添加当前目录到 import 的路径中，当前目录需要有<strong>init</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sys.path.append(os.path.dirname(__file__))</div><div class="line">sys.path.append(os.path.dirname(os.path.dirname(__file__)))</div></pre></td></tr></table></figure>
<p>os.listdir()   # 列出dirname下的目录和文件<br>os.sep  # 可以取代操作系统特定的路径分割符。<br>os.name  # 字符串指示你正在使用的平台。比如对于Windows，它是’nt’，而对于Linux/Unix用户，它是’posix’。<br>os.getcwd()  # 函数得到当前工作目录，即当前Python脚本工作的目录路径。<br>os.getenv()和os.putenv()  # 函数分别用来读取和设置环境变量。<br>os.listdir()  # 返回指定目录下的所有文件和目录名。<br>os.remove()  # 函数用来删除一个文件。<br>os.system()  # 函数用来运行shell命令。<br>os.linesep  # 字符串给出当前平台使用的行终止符。例如，Windows使用’\r\n’，Linux使用’\n’而Mac使用’\r’。<br>os.curdir  # 返回但前目录（’.’)<br>os.chdir(dirname)  # 改变工作目录到dirname<br>os.path.isdir(name)  # 判断name是不是一个目录，name不是目录就返回false<br>os.path.isfile(name)  # 判断name是不是一个文件，不存在name也返回false<br>os.path.exists(name)  # 判断是否存在文件或目录name<br>os.path.getsize(name)  # 获得文件大小，如果name是目录返回0L<br>os.path.abspath(name)  # 获得绝对路径<br>os.path.normpath(path)  # 规范path字符串形式<br>os.path.split(name)  # 分割文件名与目录（事实上，如果你完全使用目录，它也会将最后一个目录作为文件名而分离，同时它不会判断文件或目录是否存在）<br>os.path.splitext()  # 分离文件名与扩展名<br>os.path.join(path,name)  # 连接目录与文件名或目录<br>os.path.basename(path)  # 返回文件名<br>os.path.dirname(path)  # 返回文件路径</p>
<h3 id="3、python读取文件"><a href="#3、python读取文件" class="headerlink" title="3、python读取文件"></a>3、python读取文件</h3><p>方法一、这种为一行一行去读<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">for line in open(&quot;foo.txt&quot;): </div><div class="line">    print line,</div></pre></td></tr></table></figure></p>
<p>方法二、这种为读取全部文件，然后在一行一行的去读<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">f = open(&quot;c:\\1.txt&quot;,&quot;r&quot;) </div><div class="line">lines = f.readlines()#读取全部内容 </div><div class="line">for line in lines </div><div class="line">    print line</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;当前路径：&quot;&gt;&lt;a href=&quot;#当前路径：&quot; class=&quot;headerlink&quot; title=&quot;当前路径：&quot;&gt;&lt;/a&gt;当前路径：&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; sys, os&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pwd = sys.path[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]    &lt;span class=&quot;comment&quot;&gt;# 获取当前执行脚本的位置&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参数：&quot;&gt;&lt;a href=&quot;#参数：&quot; class=&quot;headerlink&quot; title=&quot;参数：&quot;&gt;&lt;/a&gt;参数：&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;`&lt;/strong&gt;file&lt;strong&gt;`&lt;/strong&gt;：当前文件完整路径，包括文件名&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;os.path.dirname(file)&lt;/strong&gt;: 某个文件所在的目录路径&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;os.path.join(a, b, c,….)&lt;/strong&gt;: 路径构造 a/b/c&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;os.path.abspath(path)&lt;/strong&gt;: 将path从相对路径转成绝对路径&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;os.pardir&lt;/strong&gt;: Linux下相当于”../“，上一级目录的标志&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
</feed>
